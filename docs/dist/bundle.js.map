{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/tweedee/dist/tweedee.js","webpack:///./objects.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","e","default","u","a","f","g","E","k","j","this","listeners","on","push","emit","forEach","h","[object Object]","Error","x","y","width","height","point","none","dimensions","updaters","addBehaviour","super","image","scrollOptions","drawBackground","speed","direction","scrollValue","scaler","ctx","drawImage","Math","round","dimensionswidth","sWidth","sHeight","repeat","frames","currentFrame","drawSpritesheetImage","floor","random","backspace","tab","enter","shiftleft","shiftright","ctrlleft","ctrlrigght","altleft","altright","pause","capslock","escape","space","pageup","pagedown","end","home","arrowleft","arrowup","arrowright","arrowdown","insert","delete","0","1","2","3","4","5","6","7","8","9","b","q","v","w","z","metaleft","metaright","select","numpad0","numpad1","numpad2","numpad3","numpad4","numpad5","numpad6","numpad7","numpad8","numpad9","numpadmultiply","numpadadd","numpadsubtract","numpaddecimal","numpaddivide","f1","f2","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","numlock","scrolllock","semicolon","equalsign","comma","minus","period","slash","backquote","bracketleft","backslash","braketright","quote","options","gameObjects","isGameOver","started","container","document","querySelector","enableCollisionDetection","gameLoop","clearRect","clear","update","requestAnimationFrame","filter","createElement","className","style","title","innerHTML","appendChild","text","buttons","length","padding","fontWeight","addEventListener","onClick","parentNode","removeChild","display","resources","type","src","id","dataset","append","getResource","tagName","cloneNode","keysDown","keyCode","keydowns","canvas","calculateDimensions","innerHeight","innerWidth","scale","getContext","focus","collisionDetection","subject","target","scaleV","scaleH","updateImage","save","translate","restore","flipVertically","flipHorizontally","easeInValue","deltaX","deltaY","boundaries","move","easeIn","cos","PI","sin","stop","checkBoundary","top","bottom","updateMovement","Number","isInteger","setBoundaries","right","left","GameWorld","behaviours","objects","utils","objects_Laser","tweedee","GameObject","Dimensions","movement","collisions","drawLaser","world","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","objects_Astroid","answer","createImageBehaviour","drawAnswer","fullSpeed","font","fillStyle","fillText","objects_Spaceship","objects_Scoreboard","drawScoreboard","score","textAlign","objects_TouchButtons","worldDimensions","Point","upButtonDimensions","downButtonDimensions","shootButtonDimensions","updateTouchButtons","fill","arc","updateUpButton","updateDownButton","updateShootButton","objects_Exercises","updateExercise","getRandomInt","result","Array","position","index","isTouchDevice","TouchEvent","DocumentTouch","keyCodeToDirectionMap","keyCodes","_spaceship","_scoreboard","_exercises","_touchButtons","console","log","touches","clientX","clientY","touchPoint","isCollision","handleArrowKeys","handleShootLaser","spaceship","play","addExplosionTo","cb","explosion","SpriteSheetObject","remove","gameOver","showPopup","startTheGame","go","add","astroids","insertAstroids","astroid","laser","createNew","answers","getRandomAnswers","astroid1","astroid2","astroid3","background","Background","scoreboard","exercises","closePopup","reset","touchButtons","start","join"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,qBClF8NC,OAA3JjC,EAAAD,QAA8K,SAAAoB,GAAmB,IAAAe,EAAA,GAAS,SAAAjC,EAAA+B,GAAc,GAAAE,EAAAF,GAAA,OAAAE,EAAAF,GAAAjC,QAA4B,IAAA2B,EAAAQ,EAAAF,GAAA,CAAY/B,EAAA+B,EAAA9B,GAAA,EAAAH,QAAA,IAAqB,OAAAoB,EAAAa,GAAA5B,KAAAsB,EAAA3B,QAAA2B,IAAA3B,QAAAE,GAAAyB,EAAAxB,GAAA,EAAAwB,EAAA3B,QAA2D,OAAAE,EAAAI,EAAAc,EAAAlB,EAAAK,EAAA4B,EAAAjC,EAAAM,EAAA,SAAAY,EAAAe,EAAAF,GAAuC/B,EAAAS,EAAAS,EAAAe,IAAAvB,OAAAC,eAAAO,EAAAe,EAAA,CAAqCrB,YAAA,EAAAC,IAAAkB,KAAsB/B,EAAAc,EAAA,SAAAI,GAAiB,oBAAAH,eAAAC,aAAAN,OAAAC,eAAAO,EAAAH,OAAAC,YAAA,CAA4FC,MAAA,WAAeP,OAAAC,eAAAO,EAAA,cAAwCD,OAAA,KAAWjB,EAAAkB,EAAA,SAAAA,EAAAe,GAAmB,KAAAA,IAAAf,EAAAlB,EAAAkB,IAAA,EAAAe,EAAA,OAAAf,EAA8B,KAAAe,GAAA,iBAAAf,QAAAE,WAAA,OAAAF,EAAqD,IAAAa,EAAArB,OAAAY,OAAA,MAA0B,GAAAtB,EAAAc,EAAAiB,GAAArB,OAAAC,eAAAoB,EAAA,WAA6CnB,YAAA,EAAAK,MAAAC,IAAsB,EAAAe,GAAA,iBAAAf,EAAA,QAAAO,KAAAP,EAAAlB,EAAAM,EAAAyB,EAAAN,EAAA,SAAAQ,GAA6D,OAAAf,EAAAe,IAAYT,KAAA,KAAAC,IAAe,OAAAM,GAAS/B,EAAAyB,EAAA,SAAAP,GAAiB,IAAAe,EAAAf,KAAAE,WAAA,WAAiC,OAAAF,EAAAgB,SAAiB,WAAY,OAAAhB,GAAU,OAAAlB,EAAAM,EAAA2B,EAAA,IAAAA,MAAsBjC,EAAAS,EAAA,SAAAS,EAAAe,GAAmB,OAAAvB,OAAAkB,UAAAC,eAAA1B,KAAAe,EAAAe,IAAiDjC,EAAA8B,EAAA,GAAA9B,IAAA+B,EAAA,GAA14B,CAA25B,UAAAb,EAAAe,EAAAjC,GAAkB,aAAaA,EAAAc,EAAAmB,GAAO,IAAAF,EAAA,GAAS/B,EAAAc,EAAAiB,GAAA/B,EAAAM,EAAAyB,EAAA,wBAAqC,OAAAI,IAASnC,EAAAM,EAAAyB,EAAA,wBAAgC,OAAAzB,IAASN,EAAAM,EAAAyB,EAAA,wBAAgC,OAAA9B,IAASD,EAAAM,EAAAyB,EAAA,mBAA2B,OAAAK,IAASpC,EAAAM,EAAAyB,EAAA,+BAAuC,OAAA3B,IAAW,IAAAqB,EAAA,GAASzB,EAAAc,EAAAW,GAAAzB,EAAAM,EAAAmB,EAAA,0BAAuC,OAAAK,IAAS9B,EAAAM,EAAAmB,EAAA,yBAAiC,OAAAY,IAASrC,EAAAM,EAAAmB,EAAA,sBAA8B,OAAAa,IAAW,IAAA7B,EAAA,GAAST,EAAAc,EAAAL,GAAAT,EAAAM,EAAAG,EAAA,wBAAqC,OAAA8B,IAASvC,EAAAM,EAAAG,EAAA,0BAAkC,OAAAK,IAASd,EAAAM,EAAAG,EAAA,kCAA0C,OAAA+B,IAASxC,EAAAM,EAAAG,EAAA,sBAA8B,OAAAgC,IAAW,IAAA3B,EAAA,WAAiB4B,KAAAC,UAAA,GAAiBD,KAAAE,GAAA,SAAA1B,EAAAe,GAAuBS,KAAAC,UAAAzB,KAAAwB,KAAAC,UAAAzB,GAAA,IAAAwB,KAAAC,UAAAzB,GAAA2B,KAAAZ,IAAoES,KAAAI,KAAA,SAAA5B,EAAAe,GAAyBS,KAAAC,UAAAzB,IAAAwB,KAAAC,UAAAzB,GAAA6B,QAAA7B,IAAiDA,EAAAe,OAAS,MAAAe,EAAQC,YAAA/B,EAAAe,GAAiB,YAAAf,QAAA,IAAAe,EAAA,UAAAiB,MAAA,2CAAqFR,KAAAS,EAAAjC,GAAA,EAAAwB,KAAAU,EAAAnB,GAAA,EAAwBgB,cAAc,WAAAD,EAAA,MAAmB,IAAAZ,EAAAY,EAAQ,MAAA3C,EAAQ4C,YAAA/B,EAAAe,GAAiB,YAAAf,QAAA,IAAAe,EAAA,UAAAiB,MAAA,yDAAmGR,KAAAW,MAAAnC,GAAA,EAAAwB,KAAAY,OAAArB,GAAA,EAAiCgB,cAAc,WAAA5C,EAAA,MAAmB,IAAAC,EAAAD,EAAQJ,EAAA,MAAYgD,YAAA/B,EAAAe,EAAAjC,GAAmB,IAAAkB,aAAAkB,EAAA,UAAAc,MAAA,wCAA2E,IAAAjB,aAAA3B,EAAA,UAAA4C,MAAA,kDAAqFR,KAAAa,MAAArC,GAAAkB,EAAAoB,OAAAd,KAAAe,WAAAxB,GAAA3B,EAAAkD,OAAAd,KAAAgB,SAAA,GAAA5C,EAAAU,KAAAkB,KAAA5B,GAAAd,KAAA+C,QAAA7B,GAAAwB,KAAAiB,aAAAzC,IAAyH+B,aAAA/B,GAAgBA,EAAAM,KAAAkB,KAAAxB,GAAe+B,OAAA/B,GAAUwB,KAAAI,KAAA,gBAAAJ,KAAAgB,SAAAX,QAAAd,KAAAf,EAAAwB,YAAAI,KAAA,iBAAyFX,EAAA,cAAAlC,EAAsBgD,YAAA/B,EAAAe,EAAAjC,GAAmB4D,MAAAxB,EAAAoB,OAAAvB,GAAAS,KAAAmB,MAAA3C,EAAAlB,IAAA0C,KAAAoB,cAAA9D,GAAA0C,KAAAgB,SAAAb,KAAAH,KAAAqB,eAAAvC,KAAAkB,OAA4GO,eAAA/B,GAAkB,GAAAwB,KAAAoB,cAAA,CAAuB,MAAME,MAAA/B,EAAAgC,UAAAjE,GAAoB0C,KAAAoB,cAAoBpB,KAAAwB,YAAAxB,KAAAwB,aAAA,EAAqC,MAAAnC,EAAAb,EAAAiD,OAAAjD,EAAAuC,WAAAJ,OAAqCX,KAAAwB,aAAAnC,IAAAW,KAAAwB,YAAA,QAAAlE,GAAA0C,KAAAwB,YAAAxB,KAAAwB,aAAAjC,EAAAf,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAAS,KAAAC,MAAA7B,KAAAwB,YAAAnC,GAAA,EAAAb,EAAAiD,OAAAzB,KAAA8B,iBAAAtD,EAAAiD,OAAAzB,KAAAe,WAAAH,SAAApC,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAAS,KAAAC,MAAA7B,KAAAwB,aAAA,EAAAhD,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,UAAA,MAAAtD,IAAA0C,KAAAwB,aAAAjC,EAAAf,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAAS,KAAAC,MAAA7B,KAAAwB,YAAAnC,GAAA,EAAAb,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,SAAApC,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAAS,KAAAC,MAAA7B,KAAAwB,aAAA,EAAAhD,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,eAA0mBpC,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAA,IAAA3C,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,WAAwGlD,EAAA,cAAAH,EAAsBgD,YAAA/B,EAAAe,EAAAjC,GAAmB4D,MAAA3B,EAAAjC,GAAA0C,KAAAmB,MAAA3C,EAAAwB,KAAA+B,OAAAzE,EAAAqD,MAAAX,KAAAgC,QAAA1E,EAAAsD,OAAAZ,KAAAiC,QAAA,EAAAjC,KAAAkC,OAAAN,KAAAC,MAAArD,EAAAmC,MAAArD,EAAAqD,OAAAX,KAAAsB,MAAA,EAAAtB,KAAAmC,aAAA,EAAAnC,KAAAgB,SAAAb,KAAAH,KAAAoC,qBAAAtD,KAAAkB,OAAmNO,qBAAA/B,GAAwB,GAAAwB,KAAAmC,cAAAnC,KAAAkC,OAAA,OAAyClC,KAAAmC,cAAAnC,KAAAkC,QAAAlC,KAAAiC,SAAAjC,KAAAmC,aAAA,GAAA3D,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAAnB,KAAAmC,aAAAnC,KAAAe,WAAAJ,MAAA,EAAAX,KAAA+B,OAAA/B,KAAAgC,QAAAxD,EAAAiD,OAAAzB,KAAAa,MAAAJ,GAAAjC,EAAAiD,OAAAzB,KAAAa,MAAAH,GAAAlC,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,SAAAZ,KAAAsB,MAAAtB,KAAAsB,MAAA,GAA0S,MAAA/B,EAAAqC,KAAAC,MAAA7B,KAAAsB,OAA+BtB,KAAAmC,cAAA5C,EAAA,IAAAA,IAAAS,KAAAsB,MAAA,KAA6C,MAAAlC,EAAA,CAAAZ,EAAAe,IAAAqC,KAAAS,MAAAT,KAAAU,UAAA/C,EAAAf,EAAA,IAAAA,EAAAmB,EAAA,CAAAnB,EAAAe,IAAAf,EAAAqC,MAAAJ,EAAAlB,EAAAsB,MAAAJ,EAAAlB,EAAAwB,WAAAJ,OAAAnC,EAAAqC,MAAAJ,EAAAjC,EAAAuC,WAAAJ,MAAApB,EAAAsB,MAAAJ,GAAAjC,EAAAqC,MAAAH,EAAAnB,EAAAsB,MAAAH,EAAAnB,EAAAwB,WAAAH,QAAApC,EAAAqC,MAAAH,EAAAlC,EAAAuC,WAAAH,OAAArB,EAAAsB,MAAAH,EAAAd,EAAA,CAAgO2C,UAAA,EAAAC,IAAA,EAAAC,MAAA,GAAAC,UAAA,GAAAC,WAAA,GAAAC,SAAA,GAAAC,WAAA,GAAAC,QAAA,GAAAC,SAAA,GAAAC,MAAA,GAAAC,SAAA,GAAAC,OAAA,GAAAC,MAAA,GAAAC,OAAA,GAAAC,SAAA,GAAAC,IAAA,GAAAC,KAAA,GAAAC,UAAA,GAAAC,QAAA,GAAAC,WAAA,GAAAC,UAAA,GAAAC,OAAA,GAAAC,OAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA7E,EAAA,GAAA8E,EAAA,GAAA7G,EAAA,GAAAC,EAAA,GAAA2B,EAAA,GAAAI,EAAA,GAAAC,EAAA,GAAAU,EAAA,GAAAhD,EAAA,GAAAyC,EAAA,GAAAD,EAAA,GAAAvC,EAAA,GAAAG,EAAA,GAAAqB,EAAA,GAAAhB,EAAA,GAAAqB,EAAA,GAAAqF,EAAA,GAAArG,EAAA,GAAAiB,EAAA,GAAAb,EAAA,GAAAiB,EAAA,GAAAiF,EAAA,GAAAC,EAAA,GAAAlE,EAAA,GAAAC,EAAA,GAAAkE,EAAA,GAAAC,SAAA,GAAAC,UAAA,GAAAC,OAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,GAAAC,QAAA,IAAAC,QAAA,IAAAC,QAAA,IAAAC,QAAA,IAAAC,QAAA,IAAAC,QAAA,IAAAC,eAAA,IAAAC,UAAA,IAAAC,eAAA,IAAAC,cAAA,IAAAC,aAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,QAAA,IAAAC,WAAA,IAAAC,UAAA,IAAAC,UAAA,IAAAC,MAAA,IAAAC,MAAA,IAAAC,OAAA,IAAAC,MAAA,IAAAC,UAAA,IAAAC,YAAA,IAAAC,UAAA,IAAAC,YAAA,IAAAC,MAAA,KAA25B,MAAA5C,EAAQpE,YAAA/B,EAAAe,GAAiBS,KAAAwH,QAAAjI,GAAA,GAAkBS,KAAAyH,YAAA,GAAAzH,KAAA0H,YAAA,EAAA1H,KAAA2H,SAAA,EAAA3H,KAAA4H,UAAAC,SAAAC,cAAAtJ,GAAAgG,EAAA1F,KAAAkB,KAAAwE,CAAAxE,KAAA4H,UAAA5H,KAAAwH,SAAApJ,EAAAU,KAAAkB,KAAA5B,GAAAsC,EAAA5B,KAAAkB,KAAAU,CAAAV,KAAA4H,UAAArI,GAAAmF,EAAA5F,KAAAkB,KAAA0E,GAAAnF,EAAAwI,0BAAAtH,EAAA3B,KAAAkB,KAAAS,GAAmPF,QAAQP,KAAA2H,SAAA,EAAA3H,KAAA0H,YAAA,EAAA1H,KAAAgI,WAAmDzH,QAAQP,KAAAyH,YAAA,GAAoBlH,WAAWP,KAAA0H,YAAA,EAAmBnH,QAAQP,KAAA0B,IAAAuG,UAAA,IAAAjI,KAAAyB,OAAAzB,KAAAe,WAAAJ,OAAAX,KAAAyB,OAAAzB,KAAAe,WAAAH,SAA+FL,WAAWP,KAAA0H,aAAA1H,KAAAI,KAAA,iBAAAJ,WAAAkI,QAAAlI,KAAAyH,YAAApH,QAAA7B,KAAA2J,OAAAnI,YAAAI,KAAA,gBAAAJ,MAAAV,OAAA8I,sBAAA,KAA8KpI,KAAAgI,cAAmBzH,OAAA/B,GAAUwB,KAAAyH,YAAAtH,KAAA3B,GAAyB+B,OAAA/B,GAAUwB,KAAAyH,YAAAzH,KAAAyH,YAAAY,OAAA9I,OAAAf,GAAmD+B,UAAA/B,GAAa,MAAAe,EAAAsI,SAAAS,cAAA,OAAsC/I,EAAAgJ,UAAA,QAAAhJ,EAAAiJ,MAAA7H,MAAAX,KAAAyB,OAAAzB,KAAAW,OAAA,KAA+D,MAAArD,EAAAuK,SAAAS,cAAA,OAAsC,GAAAhL,EAAAiL,UAAA,gBAAA/J,EAAAiK,MAAA,CAAwC,MAAAlJ,EAAAsI,SAAAS,cAAA,MAAqC/I,EAAAmJ,UAAAlK,EAAAiK,MAAAnL,EAAAqL,YAAApJ,GAAqC,GAAAf,EAAAoK,KAAA,CAAW,MAAArJ,EAAAsI,SAAAS,cAAA,OAAsC/I,EAAAmJ,UAAAlK,EAAAoK,KAAAtL,EAAAqL,YAAApJ,GAAoCf,EAAAqK,SAAArK,EAAAqK,QAAAC,QAAAtK,EAAAqK,QAAAxI,QAAA7B,IAAmD,MAAAe,EAAAsI,SAAAS,cAAA,UAAyC/I,EAAAmJ,UAAAlK,EAAAoK,KAAArJ,EAAAiJ,MAAAO,QAAA,OAAAxJ,EAAAiJ,MAAAQ,WAAA,MAAAzJ,EAAA0J,iBAAA,QAAAzK,EAAA0K,SAAA5L,EAAAqL,YAAApJ,KAA0HA,EAAAoJ,YAAArL,GAAA0C,KAAA4H,UAAAe,YAAApJ,GAAiDgB,aAAa,MAAA/B,EAAAwB,KAAA4H,UAAAE,cAAA,UAA+CtJ,KAAA2K,WAAAC,YAAA5K,IAAgC,MAAAgG,EAAA,SAAAhG,EAAAe,GAAsB,MAAAjC,EAAAuK,SAAAS,cAAA,OAAsChL,EAAAkL,MAAAa,QAAA,OAAA9J,EAAA+J,YAAA/J,EAAA+J,UAAAjB,OAAA7J,GAAA,UAAAA,EAAA+K,MAAAlJ,QAAA7B,IAAyF,MAAAe,EAAAsI,SAAAS,cAAA,OAAsC/I,EAAAiK,IAAAhL,EAAAgL,IAAAjK,EAAAkK,GAAAjL,EAAAgL,IAAAjK,EAAAmK,QAAA7L,KAAAW,EAAAX,KAAAP,EAAAqM,OAAApK,KAAyDA,EAAA+J,UAAAjB,OAAA7J,GAAA,UAAAA,EAAA+K,MAAAlJ,QAAA7B,IAAsD,MAAAe,EAAAsI,SAAAS,cAAA,SAAwC/I,EAAAiK,IAAAhL,EAAAgL,IAAAjK,EAAAkK,GAAAjL,EAAAgL,IAAAjK,EAAAmK,QAAA7L,KAAAW,EAAAX,KAAAP,EAAAqM,OAAApK,MAAyDf,EAAAmK,YAAArL,GAAA0C,KAAA4J,YAAA,SAAApL,GAAiD,MAAAe,EAAAsI,SAAAC,6BAA8CtJ,OAAO,IAAAe,EAAA,UAAAiB,sCAAsDhC,kDAAkD,gBAAAe,EAAAsK,QAAAtK,EAAAuK,YAAAvK,IAA2CmF,EAAA,WAAc1E,KAAA+J,SAAA,GAAAzK,OAAA2J,iBAAA,UAAAzK,IAAuDwB,KAAA+J,SAAA5J,KAAA3B,EAAAwL,SAAAhK,KAAAI,KAAA,UAAA5B,EAAAwL,WAA6D1K,OAAA2J,iBAAA,QAAAzK,IAAsCwB,KAAAiK,SAAAjK,KAAA+J,SAAA1B,OAAA9I,OAAAf,EAAAwL,SAAAhK,KAAAI,KAAA,QAAA5B,EAAAwL,WAAkFhK,KAAAkK,OAAAjB,iBAAA,YAAAzK,IAA+CwB,KAAAI,KAAA,YAAA5B,KAAyBwB,KAAAkK,OAAAjB,iBAAA,UAAAzK,IAA6CwB,KAAAI,KAAA,UAAA5B,KAAuBwB,KAAAkK,OAAAjB,iBAAA,aAAAzK,IAAgDwB,KAAAI,KAAA,aAAA5B,KAA0BwB,KAAAkK,OAAAjB,iBAAA,WAAAzK,IAA8CwB,KAAAI,KAAA,WAAA5B,MAA0BkC,EAAA,SAAAlC,EAAAe,GAAiBS,KAAAe,WAAA,IAAAnD,EAAA2B,EAAAoB,OAAA,KAAApB,EAAAqB,QAAA,KAAAZ,KAAAmK,oBAAA,SAAA5K,GAAwF,MAAAjC,EAAAgC,OAAA8K,YAAA/K,EAAAC,OAAA+K,WAA+ChL,EAAA/B,GAAA0C,KAAAsK,MAAAhN,EAAA0C,KAAAe,WAAAH,OAAApC,EAAAgK,MAAA7H,MAAAX,KAAAyB,OAAAzB,KAAAe,WAAAJ,OAAA,KAAAnC,EAAAgK,MAAA5H,OAAAZ,KAAAyB,OAAAzB,KAAAe,WAAAH,QAAA,KAAArB,EAAAoB,MAAAX,KAAAyB,OAAAzB,KAAAe,WAAAJ,OAAApB,EAAAqB,OAAAZ,KAAAyB,OAAAzB,KAAAe,WAAAH,UAAAZ,KAAAsK,MAAAjL,EAAAW,KAAAe,WAAAJ,MAAAnC,EAAAgK,MAAA7H,MAAAX,KAAAyB,OAAAzB,KAAAe,WAAAJ,OAAA,KAAAnC,EAAAgK,MAAA5H,OAAAZ,KAAAyB,OAAAzB,KAAAe,WAAAH,QAAA,KAAArB,EAAAoB,MAAAX,KAAAyB,OAAAzB,KAAAe,WAAAJ,OAAApB,EAAAqB,OAAAZ,KAAAyB,OAAAzB,KAAAe,WAAAH,UAA2dZ,KAAAyB,OAAA,SAAAjD,GAAyB,OAAAA,EAAAwB,KAAAsK,OAAqB,MAAAhN,EAAAuK,SAAAS,cAAA,UAAyChL,EAAAiL,UAAA,QAAA/J,EAAAmK,YAAArL,GAAA0C,KAAAmK,oBAAA7M,GAAA0C,KAAA0B,IAAApE,EAAAiN,WAAA,MAAAjL,OAAA2J,iBAAA,aAAAjJ,KAAAmK,oBAAA7M,MAAAkN,QAAAxK,KAAAkK,OAAA5M,GAAuLmD,EAAA,WAAcT,KAAAE,GAAA,gBAAA1B,IAA4B,MAAAe,EAAAf,EAAAiJ,YAAAY,OAAA7J,KAAAiM,oBAAsDlL,EAAAc,QAAA/C,IAAciC,EAAA8I,OAAA7J,OAAAlB,GAAA+C,QAAAd,IAA+BI,EAAArC,EAAAiC,IAAAf,EAAA4B,KAAA,qBAAoCsK,QAAApN,EAAAqN,OAAApL,WAA4B,IAAAM,EAAA,WAAiBG,KAAAyK,oBAAA,GAA4B3K,EAAAtB,IAAA,WAAqBwB,KAAAmB,MAAA3C,EAAAwB,KAAA4K,OAAA,EAAA5K,KAAA6K,OAAA,EAAA7K,KAAA8K,YAAA,SAAAtM,GAAsE,QAAAwB,KAAA4K,SAAA,IAAA5K,KAAA6K,OAAA,CAAuC,MAAAtL,GAAA,IAAAS,KAAA4K,QAAA,EAAA5K,KAAAa,MAAAJ,EAAAT,KAAAa,MAAAJ,EAAAnD,GAAA,IAAA0C,KAAA6K,QAAA,EAAA7K,KAAAa,MAAAH,EAAAV,KAAAa,MAAAH,EAAsGlC,EAAAkD,IAAAqJ,OAAAvM,EAAAkD,IAAAsJ,UAAAxM,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAA,GAAAnC,EAAAkD,IAAA4I,MAAAtK,KAAA4K,OAAA5K,KAAA6K,QAAArM,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAA3C,EAAAiD,OAAAlC,GAAAf,EAAAiD,OAAAnE,GAAAkB,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,SAAApC,EAAAkD,IAAAuJ,eAA0OzM,EAAAkD,IAAAC,UAAA3B,KAAAmB,MAAA3C,EAAAiD,OAAAzB,KAAAa,MAAAJ,GAAAjC,EAAAiD,OAAAzB,KAAAa,MAAAH,GAAAlC,EAAAiD,OAAAzB,KAAAe,WAAAJ,OAAAnC,EAAAiD,OAAAzB,KAAAe,WAAAH,UAAgJZ,KAAAgB,SAAAb,KAAAH,KAAA8K,YAAAhM,KAAAkB,YAAAkL,eAAA,WAAgFlL,KAAA4K,OAAA,IAAA5K,KAAA4K,QAAA,KAAiC5K,KAAAmL,iBAAA,WAAkCnL,KAAA6K,OAAA,IAAA7K,KAAA6K,QAAA,OAAoC9K,EAAA,WAAiBC,KAAAuB,UAAA,KAAAvB,KAAAsB,MAAA,EAAAtB,KAAAoL,YAAA,EAAApL,KAAAqL,OAAA,EAAArL,KAAAsL,OAAA,EAAAtL,KAAAuL,WAAA,KAAAvL,KAAAwL,KAAA,SAAAhN,EAAAe,EAAAjC,GAA+H0C,KAAAwH,QAAAlK,GAAA,GAAkB0C,KAAAuB,UAAA/C,EAAA,MAAAe,IAAAS,KAAAsB,MAAAtB,KAAAwH,QAAAiE,OAAAzL,KAAAoL,YAAA7L,EAAAS,KAAAqL,OAAA9L,EAAAqC,KAAA8J,IAAAlN,EAAAoD,KAAA+J,GAAA,KAAA3L,KAAAsL,QAAA/L,EAAAqC,KAAAgK,IAAApN,EAAAoD,KAAA+J,GAAA,OAA4J3L,KAAA6L,KAAA,WAAsB7L,KAAAuB,UAAA,KAAAvB,KAAAsB,MAAA,EAAAtB,KAAAoL,YAAA,GAAoDpL,KAAA8L,cAAAtN,IAAyBwB,KAAAuL,aAAA,KAAAvL,KAAAuB,WAAAvB,KAAAa,MAAAH,EAAAlC,GAAAwB,KAAAuL,WAAAQ,MAAA/L,KAAAa,MAAAH,EAAAV,KAAAuL,WAAAQ,IAAA/L,KAAA6L,QAAA,MAAA7L,KAAAuB,WAAAvB,KAAAa,MAAAH,EAAAlC,EAAAwB,KAAAe,WAAAH,QAAAZ,KAAAuL,WAAAS,SAAAhM,KAAAa,MAAAH,EAAAV,KAAAuL,WAAAS,OAAAhM,KAAAe,WAAAH,OAAAZ,KAAA6L,UAA0R7L,KAAAiM,eAAA,WAAiCC,OAAAC,UAAAnM,KAAAuB,aAAAvB,KAAAwH,QAAAiE,QAAAzL,KAAAoL,YAAApL,KAAAsB,QAAAtB,KAAAoL,aAAA,GAAApL,KAAA8L,cAAA9L,KAAAsB,OAAAtB,KAAAa,MAAAJ,GAAAT,KAAAqL,OAAArL,KAAAa,MAAAH,GAAAV,KAAAsL,SAA+LtL,KAAAoM,cAAA,SAAA5N,EAAAe,EAAAjC,EAAA+B,GAAsCW,KAAAuL,WAAA,CAAiBQ,IAAAvN,EAAA6N,MAAA9M,EAAAyM,OAAA1O,EAAAgP,KAAAjN,IAA+BW,KAAAgB,SAAAb,KAAAH,KAAAiM,eAAAnN,KAAAkB,QAAqD1C,EAAAM,EAAA2B,EAAA,uBAA6B,OAAAoF,IAASrH,EAAAM,EAAA2B,EAAA,wBAAgC,OAAAxB,IAAST,EAAAM,EAAA2B,EAAA,qBAA6B,OAAAF,IAAS/B,EAAAM,EAAA2B,EAAA,mBAA2B,OAAAR,IAAWQ,EAAAC,QAAA,CAAW+M,UAAA5H,EAAA6H,WAAAzO,EAAA0O,QAAApN,EAAAqN,MAAA3N,sDCE7uW,MAAM4N,UAAcC,EAAA,QAAOC,WAClCtM,YAAAM,GACAK,MAAAL,EAAA,IAAqB+L,EAAA,QAAOE,WAAA,OAAqBF,EAAA,WAAUG,SAAWH,EAAA,WAAUI,aAChFhN,KAAAgB,SAAAb,KAAAH,KAAAiN,UAAAnO,KAAAkB,OACAA,KAAAwL,KAAA,MAGAjL,UAAA2M,GACAA,EAAAxL,IAAAyL,YACAD,EAAAxL,IAAA0L,OAAAF,EAAAzL,OAAAzB,KAAAa,MAAAJ,GAAAyM,EAAAzL,OAAAzB,KAAAa,MAAAH,IACAwM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAzB,KAAAa,MAAAJ,GAAAT,KAAAe,WAAAJ,MAAAuM,EAAAzL,OAAAzB,KAAAa,MAAAH,IACAwM,EAAAxL,IAAA4L,YAAA,UACAJ,EAAAxL,IAAA6L,UAAAvN,KAAAe,WAAAH,OACAsM,EAAAxL,IAAA8L,UAIO,MAAMC,UAAgBb,EAAA,QAAOC,WACpCtM,YAAAY,EAAAN,EAAA6M,GACAxM,MAAAL,EAAA,IAAqB+L,EAAA,QAAOE,WAAA3L,EAAAR,MAAAQ,EAAAP,QAAA,CACtBgM,EAAA,WAAUe,qBAAAxM,GACVyL,EAAA,WAAUG,SACVH,EAAA,WAAUI,aAEhBhN,KAAA0N,SACA1N,KAAAgB,SAAAb,KAAAH,KAAA4N,WAAA9O,KAAAkB,OACAA,KAAA6N,UAAA,EACA7N,KAAAwL,KAAA,OAGAjL,WAAA2M,GACAA,EAAAxL,IAAAoM,QAAwBZ,EAAAzL,OAAA,cACxByL,EAAAxL,IAAAqM,UAAA,QACAb,EAAAxL,IAAAsM,SAAAhO,KAAA0N,OAAAR,EAAAzL,OAAAzB,KAAAa,MAAAJ,EAAA,IAAAyM,EAAAzL,OAAAzB,KAAAa,MAAAH,EAAA,MAIO,MAAMuN,UAAkBrB,EAAA,QAAOC,WACtCtM,YAAAY,EAAAN,GACAK,MAAAL,EAAA,IAAqB+L,EAAA,QAAOE,WAAA3L,EAAAR,MAAAQ,EAAAP,QAAA,CACtBgM,EAAA,WAAUe,qBAAAxM,GACVyL,EAAA,WAAUG,SACVH,EAAA,WAAUI,cAKT,MAAMkB,UAAmBtB,EAAA,QAAOC,WACvCtM,YAAAY,EAAAN,GACAK,MAAAL,EAAiB+L,EAAA,QAAOE,WAAAhM,OAAA,CAClB8L,EAAA,WAAUe,qBAAAxM,KAEhBnB,KAAAgB,SAAAb,KAAAH,KAAAmO,eAAArP,KAAAkB,OACAA,KAAAoO,MAAA,EAGA7N,IAAA6N,GACApO,KAAAoO,SAGA7N,eAAA2M,GACAA,EAAAxL,IAAAqJ,OACAmC,EAAAxL,IAAAoM,QAAwBZ,EAAAzL,OAAA,cACxByL,EAAAxL,IAAAqM,UAAA,QACAb,EAAAxL,IAAA2M,UAAA,OACAnB,EAAAxL,IAAAsM,SAAA,WAAAhO,KAAAoO,MAAAlB,EAAAzL,OAAA,IAAAyL,EAAAzL,OAAA,KACAyL,EAAAxL,IAAAuJ,WAIO,MAAMqD,UAAqB1B,EAAA,QAAOC,WACzCtM,YAAAgO,GACArN,MAAU0L,EAAA,QAAO4B,MAAA1N,QACjBd,KAAAyO,mBAAA,IAAkC7B,EAAA,QAAOC,WAAA,IAAgBD,EAAA,QAAO4B,MAAA,GAAAD,EAAA3N,OAAA,SAA8CgM,EAAA,QAAOE,WAAA,QACrH9M,KAAA0O,qBAAA,IAAoC9B,EAAA,QAAOC,WAAA,IAAgBD,EAAA,QAAO4B,MAAA,GAAAD,EAAA3N,OAAA,QAA6CgM,EAAA,QAAOE,WAAA,QACtH9M,KAAA2O,sBAAA,IAAqC/B,EAAA,QAAOC,WAC5C,IAAUD,EAAA,QAAO4B,MAAAD,EAAA5N,MAAA,IAAA4N,EAAA3N,OAAA,KACjB,IAAUgM,EAAA,QAAOE,WAAA,QAEjB9M,KAAAgB,SAAAb,KAAAH,KAAA4O,mBAAA9P,KAAAkB,OAGAO,eAAA2M,GACAA,EAAAxL,IAAAqM,UAAA,OACAb,EAAAxL,IAAA4L,YAAA,QACAJ,EAAAxL,IAAA6L,UAAA,EACAL,EAAAxL,IAAAyL,YAEA,MAAAtM,MAAWA,EAAAE,cAAoBf,KAAAyO,mBAC/BvB,EAAAxL,IAAA0L,OAAAF,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,MAAA,GAAAuM,EAAAzL,OAAAZ,EAAAH,IACAwM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,OAAAuM,EAAAzL,OAAAZ,EAAAH,EAAAK,EAAAH,SACAsM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,GAAAyM,EAAAzL,OAAAZ,EAAAH,EAAAK,EAAAH,SACAsM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,MAAA,GAAAuM,EAAAzL,OAAAZ,EAAAH,IACAwM,EAAAxL,IAAA8L,SACAN,EAAAxL,IAAAmN,OAGAtO,iBAAA2M,GACAA,EAAAxL,IAAAqM,UAAA,OACAb,EAAAxL,IAAA4L,YAAA,QACAJ,EAAAxL,IAAA6L,UAAA,EACAL,EAAAxL,IAAAyL,YAEA,MAAAtM,MAAWA,EAAAE,cAAoBf,KAAA0O,qBAC/BxB,EAAAxL,IAAA0L,OAAAF,EAAAzL,OAAAZ,EAAAJ,GAAAyM,EAAAzL,OAAAZ,EAAAH,IACAwM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,OAAAuM,EAAAzL,OAAAZ,EAAAH,IACAwM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,MAAA,GAAAuM,EAAAzL,OAAAZ,EAAAH,EAAAK,EAAAH,SACAsM,EAAAxL,IAAA2L,OAAAH,EAAAzL,OAAAZ,EAAAJ,GAAAyM,EAAAzL,OAAAZ,EAAAH,IACAwM,EAAAxL,IAAA8L,SACAN,EAAAxL,IAAAmN,OAGAtO,kBAAA2M,GACAA,EAAAxL,IAAAqM,UAAA,UACAb,EAAAxL,IAAA4L,YAAA,QACAJ,EAAAxL,IAAA6L,UAAA,EACAL,EAAAxL,IAAAyL,YAEA,MAAAtM,MAAWA,EAAAE,cAAoBf,KAAA2O,sBAC/BzB,EAAAxL,IAAAoN,IACA5B,EAAAzL,OAAAZ,EAAAJ,EAAAM,EAAAJ,MAAA,GACAuM,EAAAzL,OAAAZ,EAAAH,EAAAK,EAAAH,OAAA,GACAsM,EAAAzL,OAAAV,EAAAJ,MAAA,OAAAiB,KAAA+J,IAAA,GAEAuB,EAAAxL,IAAA8L,SACAN,EAAAxL,IAAAmN,OAGAtO,mBAAA2M,GACAA,EAAAxL,IAAAqJ,OACA/K,KAAA+O,eAAA7B,GACAlN,KAAAgP,iBAAA9B,GACAlN,KAAAiP,kBAAA/B,GACAA,EAAAxL,IAAAuJ,WAIO,MAAMiE,UAAkBtC,EAAA,QAAOC,WACtCtM,YAAAM,GACAK,MAAAL,GACAb,KAAAgB,SAAAb,KAAAH,KAAAmP,eAAArQ,KAAAkB,OACAA,KAAA4I,KAAA,GACA5I,KAAA0N,OAAA,KAGAnN,YACA,MAAAb,EAAckN,EAAA,MAAKwC,aAAA,MACnB5K,EAAcoI,EAAA,MAAKwC,aAAA,MACnBpP,KAAAN,IACAM,KAAAwE,IACAxE,KAAA4I,KAAAlJ,EAAA,MAAA8E,EACAxE,KAAA0N,OAAAhO,EAAA8E,EAGAjE,mBACA,MAAA8O,EAAA,IAAAC,MAAA,GACAC,EAAqB3C,EAAA,MAAKwC,aAAA,KAC1BC,EAAAE,GAAAvP,KAAA0N,OACA,QAAA8B,EAAA,EAAuBA,GAAA,EAAYA,IACnC,GAAAA,IAAAD,EAAA,CACA,IAAA/K,EAAgBoI,EAAA,MAAKwC,aAAA,MACrB,KAAA5K,IAAAxE,KAAAwE,GACAA,EAAcoI,EAAA,MAAKwC,aAAA,MAEnBC,EAAAG,GAAAxP,KAAAN,EAAA8E,EAGA,OAAA6K,EAGA9O,eAAA2M,GACAA,EAAAxL,IAAAqJ,OACAmC,EAAAxL,IAAAoM,QAAwBZ,EAAAzL,OAAA,cACxByL,EAAAxL,IAAAqM,UAAA,QACAb,EAAAxL,IAAA2M,UAAA,SACAnB,EAAAxL,IAAAsM,SAAA,OAAAd,EAAAzL,OAAA,KAAAyL,EAAAzL,OAAAyL,EAAAnM,WAAAH,OAAA,KACAsM,EAAAxL,IAAAsM,SAAAhO,KAAA4I,KAAAsE,EAAAzL,OAAA,KAAAyL,EAAAzL,OAAAyL,EAAAnM,WAAAH,OAAA,KACAsM,EAAAxL,IAAAuJ,WChLA,MAAAwE,EAAA,IACA,iBAAAnQ,eAAAoQ,YAAApQ,OAAAqQ,eAAA9H,oBAAA8H,cAGAC,EAAA,CACArP,CAAGqM,EAAA,MAAKiD,SAAApM,SAAA,GACRlD,CAAGqM,EAAA,MAAKiD,SAAAlM,WAAA,KAGRuJ,EAAA,IAAkBN,EAAA,UAAS,cAC3BtD,UAAA,CACA,CAAKC,KAAA,QAAA1L,KAAA,aAAA2L,IAAA,yBACL,CAAKD,KAAA,QAAA1L,KAAA,YAAA2L,IAAA,wBACL,CAAKD,KAAA,QAAA1L,KAAA,WAAA2L,IAAA,wBACL,CAAKD,KAAA,QAAA1L,KAAA,YAAA2L,IAAA,wBACL,CAAKD,KAAA,QAAA1L,KAAA,uBAAA2L,IAAA,wBACL,CAAKD,KAAA,QAAA1L,KAAA,QAAA2L,IAAA,oBACL,CAAKD,KAAA,QAAA1L,KAAA,YAAA2L,IAAA,wBACL,CAAKD,KAAA,QAAA1L,KAAA,QAAA2L,IAAA,qBAELzB,0BAAA,IAGA,IAAA+H,EAAAC,EAAAC,EAAAC,EAAA,KAsBA/C,EAAAhN,GAAA,aApBAX,IAEA,GADA2Q,QAAAC,IAAA5Q,GACAuQ,GAAAG,EAAA,CACA,MAAAxP,EAAAlB,EAAA6Q,QAAA7Q,EAAA6Q,QAAA,GAAAC,QAAA9Q,EAAA8Q,QACA3P,EAAAnB,EAAA6Q,QAAA7Q,EAAA6Q,QAAA,GAAAE,QAAA/Q,EAAA+Q,QAEAC,EAAA,IAA2B3D,EAAA,QAAOC,WAAA,IAAgBD,EAAA,QAAO4B,MAAA/N,EAAAyM,EAAA5C,MAAA5J,EAAAwM,EAAA5C,OAAA,IAA8CsC,EAAA,QAAOE,WAAA,QAEtGF,EAAA,MAAK4D,YAAAP,EAAAxB,mBAAA8B,IACbE,EAAsB7D,EAAA,MAAKiD,SAAApM,QAAAqM,GAEnBlD,EAAA,MAAK4D,YAAAP,EAAAvB,qBAAA6B,IACbE,EAAsB7D,EAAA,MAAKiD,SAAAlM,UAAAmM,GAEnBlD,EAAA,MAAK4D,YAAAP,EAAAtB,sBAAA4B,IACbG,EAAuB9D,EAAA,MAAKiD,SAAA1M,MAAA2M,MAO5B5C,EAAAhN,GAAA,gBACA4P,GACAA,EAAAjE,SAIAqB,EAAAhN,GAAA,UAAA8J,IACA8F,IACAW,EAAAzG,EAAA8F,GACAY,EAAA1G,EAAA8F,MAIA,MAAAW,EAAA,CAAAzG,EAAA2G,KACA,MAAApP,EAAAqO,EAAA5F,GACAkC,OAAAC,UAAA5K,IAAAoP,EAAAnF,KAAAjK,EAAA,GAA+DkK,QAAA,KAG/DyB,EAAAhN,GAAA,QAAA8J,IACA,MAAAzI,EAAAqO,EAAA5F,GACAkC,OAAAC,UAAA5K,IAAAuO,EAAAjE,SAGA,MAAA6E,EAAA,CAAA1G,EAAA2G,KACA3G,IAAkB4C,EAAA,MAAKiD,SAAA1M,QACvB+J,EAAAtJ,OAAA,IAAqB+I,EAAK,IAAKC,EAAA,QAAO4B,MAAAmC,EAAA9P,MAAAJ,EAAAkQ,EAAA5P,WAAA,MAAA4P,EAAA9P,MAAAH,EAAAiQ,EAAA5P,WAAAH,OAAA,KACtCsM,EAAAtD,YAAA,SAAAgH,SAIA1D,EAAAhN,GAAA,sBAAgCwK,UAAAC,aAChC,MAAAkG,EAAA,CAAAhQ,EAAAiQ,KACA,MAAAC,EAAA,IAA0BnE,EAAA,QAAOoE,kBAAA9D,EAAAtD,YAAA,wBAAA/I,EAAA,IAAyE+L,EAAA,QAAOE,WAAA,UACjHiE,EAAA7O,OAAA,EACA6O,EAAA7Q,GAAA,mBACA6Q,EAAA5O,cAAA4O,EAAA7O,SACAgL,EAAA+D,OAAAF,GACAD,UAGA5D,EAAAtJ,OAAAmN,KAIArG,aAA0BuD,GAAStD,aAAsB8C,GACzD/C,aAAwBuD,GAAStD,aAAsBgC,KACvDO,EAAA+D,OAAAvG,GACAwC,EAAAtD,YAAA,SAAAgH,OACAC,EAAAnG,EAAA7J,MAAA,KACAqM,EAAAgE,WACAhE,EAAAiE,UAAA,CACA1I,MAAA,aACAI,QAAA,EAAqBD,KAAA,mBAAAM,QAAAkI,SAKrB1G,aAA0BiC,GAAKhC,aAAsB8C,IACrD9C,EAAA+C,SAAAsC,EAAAtC,QACAR,EAAAtD,YAAA,aAAAgH,OAEAC,EAAAlG,EAAA9J,OAEAqM,EAAA+D,OAAAtG,GACAuC,EAAA+D,OAAAvG,GACAwC,EAAAzF,YAAAY,OAAAgJ,gBAAmD5D,GAAOpN,QAAAgR,IAC1DA,EAAA7F,KAAA6F,EAAA9P,UAAA8P,EAAAxD,aAEAkC,EAAAuB,IAAA,MAEA5G,EAAAc,KAAA,QAAAd,EAAApJ,OACAqJ,EAAAa,KAAA,IAAAb,EAAAkD,eAKAX,EAAAhN,GAAA,qBACA,MAAAqR,EAAArE,EAAAzF,YAAAY,OAAAgJ,gBAAgE5D,GAChE,IAAA8D,EAAAzI,OACA0I,IAEAD,EAAAlJ,OAAAoJ,KAAA5Q,MAAAJ,EAAA,IAAAgR,EAAA1Q,WAAAJ,OAAAN,QAAAoR,GAAAvE,EAAA+D,OAAAQ,IAEAvE,EAAAzF,YAAAY,OAAAgJ,gBAA+C1E,GAAK0E,EAAAxQ,MAAAJ,EAAA4Q,EAAAtQ,WAAAJ,MAAAuM,EAAAnM,WAAAJ,OAAAN,QAAAqR,GAAAxE,EAAA+D,OAAAS,MAGpD,MAAAF,EAAA,KACA,MAAA9Q,EAAAwM,EAAAnM,WAAAH,OAAA,EACAoP,EAAA2B,YACA,MAAAC,EAAA5B,EAAA6B,mBACAC,EAAA,IAAuBrE,EAAOP,EAAAtD,YAAA,gBAAoCgD,EAAA,QAAO4B,MAAAtB,EAAAnM,WAAAJ,MAAiCiM,EAAA,MAAKwC,aAAA,WAAA1O,EAAA,MAAAkR,EAAA,IAC/GG,EAAA,IAAuBtE,EAAOP,EAAAtD,YAAA,gBAAoCgD,EAAA,QAAO4B,MAAAtB,EAAAnM,WAAAJ,MAAiCiM,EAAA,MAAKwC,aAAA,WAAA1O,EAAA,GAAAkR,EAAA,IAC/GI,EAAA,IAAuBvE,EAAOP,EAAAtD,YAAA,gBAAoCgD,EAAA,QAAO4B,MAAAtB,EAAAnM,WAAAJ,MAAiCiM,EAAA,MAAKwC,aAAA,WAAA1O,EAAA,MAAAkR,EAAA,IAE/G1E,EAAAtJ,OAAAkO,GACA5E,EAAAtJ,OAAAmO,GACA7E,EAAAtJ,OAAAoO,IAGAZ,EAAA,KACA,MAAAT,EAAA,IAAwB1C,EAASf,EAAAtD,YAAA,iBAAqCgD,EAAA,QAAO4B,MAAA,IAAAtB,EAAAnM,WAAAH,OAAA,IAC7E+P,EAAAvE,cAAA,GAAAc,EAAAnM,WAAAJ,MAAAuM,EAAAnM,WAAAH,OAAA,OAEA,MAAAqR,EAAA,IAAyBrF,EAAA,QAAOsF,WAAAhF,EAAAtD,YAAA,cAAAsD,EAAAnM,YAChCoR,EAAA,IAAyBjE,EAAUhB,EAAAtD,YAAA,iBAAqCgD,EAAA,QAAO4B,MAAA,EAAAtB,EAAAnM,WAAAH,OAAA,MAC/EwR,EAAA,IAAwBlD,EAYxB,GAXAa,EAAAoC,EACArC,EAAAa,EACAX,EAAAoC,EAEAlF,EAAAmF,aACAnF,EAAAoF,QACApF,EAAAtJ,OAAAqO,GACA/E,EAAAtJ,OAAAuO,GACAjF,EAAAtJ,OAAAwO,GACAlF,EAAAtJ,OAAA+M,GAEAlB,IAAA,CACA,MAAA8C,EAAA,IAA6BjE,EAAYpB,EAAAnM,YACzCkP,EAAAsC,EACArF,EAAAtJ,OAAA2O,GAGArF,EAAAsF,SAGAtF,EAAAiE,UAAA,CACA1I,MAAA,wBACAG,KAAA,CAAA6G,IACA,6FACA,qGACA,IACAgD,KAAA,gBACA5J,QAAA,EAAaD,KAAA,QAAAM,QAAAkI","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var i=e();for(var s in i)(\"object\"==typeof exports?exports:t)[s]=i[s]}}(window,function(){return function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=0)}([function(t,e,i){\"use strict\";i.r(e);var s={};i.r(s),i.d(s,\"Background\",function(){return u}),i.d(s,\"Dimensions\",function(){return d}),i.d(s,\"GameObject\",function(){return l}),i.d(s,\"Point\",function(){return a}),i.d(s,\"SpriteSheetObject\",function(){return m});var n={};i.r(n),i.d(n,\"getRandomInt\",function(){return p}),i.d(n,\"isCollision\",function(){return f}),i.d(n,\"keyCodes\",function(){return g});var o={};i.r(o),i.d(o,\"collisions\",function(){return E}),i.d(o,\"eventEmitter\",function(){return r}),i.d(o,\"createImageBehaviour\",function(){return k}),i.d(o,\"movement\",function(){return j});var r=function(){this.listeners={},this.on=function(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)},this.emit=function(t,e){this.listeners[t]&&this.listeners[t].forEach(t=>{t(e)})}};class h{constructor(t,e){if(void 0===t||void 0===e)throw new Error(\"x of y should be set for a Point object\");this.x=t||0,this.y=e||0}static none(){return new h(0,0)}}var a=h;class c{constructor(t,e){if(void 0===t||void 0===e)throw new Error(\"Width of Height should be set for a Dimensions object\");this.width=t||0,this.height=e||0}static none(){return new c(0,0)}}var d=c;var l=class{constructor(t,e,i){if(!t instanceof a)throw new Error(\"point should be an instance of Point\");if(!e instanceof d)throw new Error(\"dimensions should be an instance of Dimensions\");this.point=t||a.none(),this.dimensions=e||d.none(),this.updaters=[],r.bind(this)(),i&&i.forEach(t=>this.addBehaviour(t))}addBehaviour(t){t.bind(this)()}update(t){this.emit(\"beforeUpdate\"),this.updaters.forEach(e=>e(t,this)),this.emit(\"afterUpdate\")}};var u=class extends l{constructor(t,e,i){super(a.none(),e),this.image=t,i&&(this.scrollOptions=i),this.updaters.push(this.drawBackground.bind(this))}drawBackground(t){if(this.scrollOptions){const{speed:e,direction:i}=this.scrollOptions;this.scrollValue=this.scrollValue||0;const s=t.scaler(t.dimensions.width);this.scrollValue>=s&&(this.scrollValue=0),90===i?(this.scrollValue=this.scrollValue+=e,t.ctx.drawImage(this.image,Math.round(this.scrollValue-s),0,t.scaler(this.dimensionswidth),t.scaler(this.dimensions.height)),t.ctx.drawImage(this.image,Math.round(this.scrollValue),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))):270===i&&(this.scrollValue-=e,t.ctx.drawImage(this.image,Math.round(this.scrollValue+s),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),t.ctx.drawImage(this.image,Math.round(this.scrollValue),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)))}else t.ctx.drawImage(this.image,0,0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))}};var m=class extends l{constructor(t,e,i){super(e,i),this.image=t,this.sWidth=i.width,this.sHeight=i.height,this.repeat=!1,this.frames=Math.round(t.width/i.width),this.speed=0,this.currentFrame=0,this.updaters.push(this.drawSpritesheetImage.bind(this))}drawSpritesheetImage(t){if(this.currentFrame>=this.frames)return;this.currentFrame>=this.frames&&this.repeat&&(this.currentFrame=0),t.ctx.drawImage(this.image,this.currentFrame*this.dimensions.width,0,this.sWidth,this.sHeight,t.scaler(this.point.x),t.scaler(this.point.y),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),this.speed=this.speed+.1;const e=Math.round(this.speed);this.currentFrame+=e,1===e&&(this.speed=0)}};const p=(t,e)=>Math.floor(Math.random()*(e-t+1))+t,f=(t,e)=>t.point.x<e.point.x+e.dimensions.width&&t.point.x+t.dimensions.width>e.point.x&&t.point.y<e.point.y+e.dimensions.height&&t.point.y+t.dimensions.height>e.point.y,g={backspace:8,tab:9,enter:13,shiftleft:16,shiftright:16,ctrlleft:17,ctrlrigght:17,altleft:18,altright:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,arrowleft:37,arrowup:38,arrowright:39,arrowdown:40,insert:45,delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,metaleft:91,metaright:92,select:93,numpad0:96,numpad1:97,numpad2:98,numpad3:99,numpad4:100,numpad5:101,numpad6:102,numpad7:103,numpad8:104,numpad9:105,numpadmultiply:106,numpadadd:107,numpadsubtract:109,numpaddecimal:110,numpaddivide:111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,semicolon:186,equalsign:187,comma:188,minus:189,period:190,slash:191,backquote:192,bracketleft:219,backslash:220,braketright:221,quote:222};class w{constructor(t,e){this.options=e||{},this.gameObjects=[],this.isGameOver=!1,this.started=!1,this.container=document.querySelector(t),b.bind(this)(this.container,this.options),r.bind(this)(),y.bind(this)(this.container,e),v.bind(this)(),e.enableCollisionDetection&&x.bind(this)()}start(){this.started=!0,this.isGameOver=!1,this.gameLoop()}reset(){this.gameObjects=[]}gameOver(){this.isGameOver=!0}clear(){this.ctx.clearRect(0,0,this.scaler(this.dimensions.width),this.scaler(this.dimensions.height))}gameLoop(){this.isGameOver||(this.emit(\"beforeGameLoop\",this),this.clear(),this.gameObjects.forEach(t=>t.update(this)),this.emit(\"afterGameLoop\",this),window.requestAnimationFrame(()=>{this.gameLoop()}))}insert(t){this.gameObjects.push(t)}remove(t){this.gameObjects=this.gameObjects.filter(e=>e!==t)}showPopup(t){const e=document.createElement(\"div\");e.className=\"modal\",e.style.width=this.scaler(this.width)+\"px\";const i=document.createElement(\"div\");if(i.className=\"modal-content\",t.title){const e=document.createElement(\"h1\");e.innerHTML=t.title,i.appendChild(e)}if(t.text){const e=document.createElement(\"div\");e.innerHTML=t.text,i.appendChild(e)}t.buttons&&t.buttons.length&&t.buttons.forEach(t=>{const e=document.createElement(\"button\");e.innerHTML=t.text,e.style.padding=\"16px\",e.style.fontWeight=\"700\",e.addEventListener(\"click\",t.onClick),i.appendChild(e)}),e.appendChild(i),this.container.appendChild(e)}closePopup(){const t=this.container.querySelector(\".modal\");t&&t.parentNode.removeChild(t)}}const b=function(t,e){const i=document.createElement(\"div\");i.style.display=\"none\",e.resources&&(e.resources.filter(t=>\"image\"===t.type).forEach(t=>{const e=document.createElement(\"img\");e.src=t.src,e.id=t.src,e.dataset.name=t.name,i.append(e)}),e.resources.filter(t=>\"sound\"===t.type).forEach(t=>{const e=document.createElement(\"audio\");e.src=t.src,e.id=t.src,e.dataset.name=t.name,i.append(e)})),t.appendChild(i),this.getResource=function(t){const e=document.querySelector(`[data-name='${t}']`);if(!e)throw new Error(`Couldn't find resource for: '${t}', please register this as an image resource!`);return\"AUDIO\"===e.tagName?e.cloneNode():e}},v=function(){this.keysDown=[],window.addEventListener(\"keydown\",t=>{this.keysDown.push(t.keyCode),this.emit(\"keydown\",t.keyCode)}),window.addEventListener(\"keyup\",t=>{this.keydowns=this.keysDown.filter(e=>e!==t.keyCode),this.emit(\"keyup\",t.keyCode)}),this.canvas.addEventListener(\"mousedown\",t=>{this.emit(\"mousedown\",t)}),this.canvas.addEventListener(\"mouseup\",t=>{this.emit(\"mouseup\",t)}),this.canvas.addEventListener(\"touchstart\",t=>{this.emit(\"touchstart\",t)}),this.canvas.addEventListener(\"touchend\",t=>{this.emit(\"touchend\",t)})},y=function(t,e){this.dimensions=new d(e.width||1024,e.height||768),this.calculateDimensions=function(e){const i=window.innerHeight,s=window.innerWidth;s>i?(this.scale=i/this.dimensions.height,t.style.width=this.scaler(this.dimensions.width)+\"px\",t.style.height=this.scaler(this.dimensions.height)+\"px\",e.width=this.scaler(this.dimensions.width),e.height=this.scaler(this.dimensions.height)):(this.scale=s/this.dimensions.width,t.style.width=this.scaler(this.dimensions.width)+\"px\",t.style.height=this.scaler(this.dimensions.height)+\"px\",e.width=this.scaler(this.dimensions.width),e.height=this.scaler(this.dimensions.height))},this.scaler=function(t){return t*this.scale};const i=document.createElement(\"canvas\");i.className=\"world\",t.appendChild(i),this.calculateDimensions(i),this.ctx=i.getContext(\"2d\"),window.addEventListener(\"resize\",()=>this.calculateDimensions(i)),i.focus(),this.canvas=i},x=function(){this.on(\"afterGameLoop\",t=>{const e=t.gameObjects.filter(t=>t.collisionDetection);e.forEach(i=>{e.filter(t=>t!==i).forEach(e=>{f(i,e)&&t.emit(\"collisionDetected\",{subject:i,target:e})})})})};var E=function(){this.collisionDetection=!0};var k=t=>(function(){this.image=t,this.scaleV=1,this.scaleH=1,this.updateImage=function(t){if(-1===this.scaleV||-1===this.scaleH){const e=-1===this.scaleV?-1*this.point.x:this.point.x,i=-1===this.scaleH?-1*this.point.y:this.point.y;t.ctx.save(),t.ctx.translate(t.scaler(this.dimensions.width),0),t.ctx.scale(this.scaleV,this.scaleH),t.ctx.drawImage(this.image,t.scaler(e),t.scaler(i),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),t.ctx.restore()}else t.ctx.drawImage(this.image,t.scaler(this.point.x),t.scaler(this.point.y),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))},this.updaters.push(this.updateImage.bind(this)),this.flipVertically=function(){this.scaleV=1===this.scaleV?-1:1},this.flipHorizontally=function(){this.scaleH=1===this.scaleH?-1:1}});var j=function(){this.direction=null,this.speed=0,this.easeInValue=0,this.deltaX=0,this.deltaY=0,this.boundaries=null,this.move=function(t,e,i){this.options=i||{},this.direction=t,null!=e&&(this.speed=this.options.easeIn?this.easeInValue:e,this.deltaX=e*Math.cos(t*Math.PI/180),this.deltaY=-e*Math.sin(t*Math.PI/180))},this.stop=function(){this.direction=null,this.speed=0,this.easeInValue=0},this.checkBoundary=(t=>{this.boundaries&&(90===this.direction&&this.point.y-t<=this.boundaries.top&&(this.point.y=this.boundaries.top,this.stop()),270===this.direction&&this.point.y+t+this.dimensions.height>=this.boundaries.bottom&&(this.point.y=this.boundaries.bottom-this.dimensions.height,this.stop()))}),this.updateMovement=function(){Number.isInteger(this.direction)&&(this.options.easeIn&&this.easeInValue<this.speed&&(this.easeInValue+=1),this.checkBoundary(this.speed),this.point.x+=this.deltaX,this.point.y+=this.deltaY)},this.setBoundaries=function(t,e,i,s){this.boundaries={top:t,right:e,bottom:i,left:s}},this.updaters.push(this.updateMovement.bind(this))};i.d(e,\"GameWorld\",function(){return w}),i.d(e,\"behaviours\",function(){return o}),i.d(e,\"objects\",function(){return s}),i.d(e,\"utils\",function(){return n});e.default={GameWorld:w,behaviours:o,objects:s,utils:n}}])});\n//# sourceMappingURL=tweedee.js.map","import { objects, mixins, utils, behaviours } from 'tweedee';\n\nexport class Laser extends objects.GameObject {\n  constructor(point) {\n    super(point, new objects.Dimensions(20, 5), [behaviours.movement, behaviours.collisions]);\n    this.updaters.push(this.drawLaser.bind(this));\n    this.move(0, 15);\n  }\n\n  drawLaser(world) {\n    world.ctx.beginPath();\n    world.ctx.moveTo(world.scaler(this.point.x), world.scaler(this.point.y));\n    world.ctx.lineTo(world.scaler(this.point.x) + this.dimensions.width, world.scaler(this.point.y));\n    world.ctx.strokeStyle = \"#FF0000\";\n    world.ctx.lineWidth = this.dimensions.height;\n    world.ctx.stroke(); \n  }\n}\n\nexport class Astroid extends objects.GameObject {\n  constructor(image, point, answer) {\n    super(point, new objects.Dimensions(image.width, image.height), [\n      behaviours.createImageBehaviour(image),\n      behaviours.movement,\n      behaviours.collisions\n    ]);\n    this.answer = answer;\n    this.updaters.push(this.drawAnswer.bind(this));\n    this.fullSpeed = 5;\n    this.move(180, 2);\n  }\n\n  drawAnswer(world) {\n    world.ctx.font = `${world.scaler(40)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.fillText(this.answer, world.scaler(this.point.x + 50), world.scaler(this.point.y + 85));\n  }\n}\n\nexport class Spaceship extends objects.GameObject {\n  constructor(image, point) {\n    super(point, new objects.Dimensions(image.width, image.height), [\n      behaviours.createImageBehaviour(image),\n      behaviours.movement,\n      behaviours.collisions\n    ]);\n  }\n}\n\nexport class Scoreboard extends objects.GameObject {\n  constructor(image, point) {\n    super(point, objects.Dimensions.none(), [\n      behaviours.createImageBehaviour(image),\n    ]);\n    this.updaters.push(this.drawScoreboard.bind(this));\n    this.score = 0;\n  }\n\n  add (score) {\n    this.score += score;\n  }\n\n  drawScoreboard (world) {\n    world.ctx.save();\n    world.ctx.font = `${world.scaler(30)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.textAlign = \"left\"; \n    world.ctx.fillText('Score:  ' + this.score, world.scaler(20), world.scaler(30));\n    world.ctx.restore();\n  }\n}\n\nexport class TouchButtons extends objects.GameObject {\n  constructor(worldDimensions) {\n    super(objects.Point.none());\n    this.upButtonDimensions = new objects.GameObject(new objects.Point(20, worldDimensions.height - 160), new objects.Dimensions(80, 50));\n    this.downButtonDimensions = new objects.GameObject(new objects.Point(20, worldDimensions.height - 80), new objects.Dimensions(80, 50));\n    this.shootButtonDimensions = new objects.GameObject(\n      new objects.Point(worldDimensions.width - 120, worldDimensions.height - 140),\n      new objects.Dimensions(70, 70),\n    );\n    this.updaters.push(this.updateTouchButtons.bind(this));\n  }\n\n  updateUpButton(world) {\n    world.ctx.fillStyle = 'grey';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.upButtonDimensions;\n    world.ctx.moveTo(world.scaler(point.x + dimensions.width / 2), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width / 2), world.scaler(point.y));\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateDownButton(world) {\n    world.ctx.fillStyle = 'grey';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.downButtonDimensions;\n    world.ctx.moveTo(world.scaler(point.x), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + (dimensions.width / 2)), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x), world.scaler(point.y));\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateShootButton(world) {\n    world.ctx.fillStyle = '#991a00';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.shootButtonDimensions;\n    world.ctx.arc(\n      world.scaler(point.x + (dimensions.width / 2)),\n      world.scaler(point.y + (dimensions.height / 2)),\n      world.scaler(dimensions.width / 2), 0, Math.PI * 2, true\n    );\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateTouchButtons(world) {\n    world.ctx.save();\n    this.updateUpButton(world);\n    this.updateDownButton(world);\n    this.updateShootButton(world);\n    world.ctx.restore();\n  }\n}\n\nexport class Exercises extends objects.GameObject {\n  constructor(point) {\n    super (point);\n    this.updaters.push(this.updateExercise.bind(this));\n    this.text = \"\";\n    this.answer = null;\n  }\n\n  createNew () {\n    const a = utils.getRandomInt(1, 10);\n    const b = utils.getRandomInt(1, 10);\n    this.a = a;\n    this.b = b;\n    this.text = a + ' x ' + b;\n    this.answer = a * b;\n  }\n\n  getRandomAnswers () {\n    const result = new Array(3);\n    const position = utils.getRandomInt(0, 2);\n    result[position] = this.answer;\n    for (let index = 0; index <= 2; index++) {\n      if (index !== position) {\n        let b = utils.getRandomInt(1, 10);\n        while (b === this.b) {\n          b = utils.getRandomInt(1, 10);\n        }\n        result[index] = this.a * b;\n      }\n    }\n    return result;    \n  }\n\n  updateExercise(world) {\n    world.ctx.save();\n    world.ctx.font = `${world.scaler(60)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.textAlign = \"center\"; \n    world.ctx.fillText('Som:', world.scaler(280), world.scaler(world.dimensions.height - 40));\n    world.ctx.fillText(this.text, world.scaler(510), world.scaler(world.dimensions.height - 40));\n    world.ctx.restore();\n  }\n}","import { GameWorld, utils, objects } from 'tweedee';\nimport { Spaceship, Laser, Scoreboard, Astroid, Exercises, TouchButtons } from './objects';\n\nconst isTouchDevice = () => {\n  return ('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch;\n};\n\nconst keyCodeToDirectionMap = {\n  [utils.keyCodes.arrowup]: 90,\n  [utils.keyCodes.arrowdown]: 270,\n};\n\nconst world = new GameWorld('#container', {\n  resources: [\n    { type: 'image', name: 'background', src: 'static/background.png' },\n    { type: 'image', name: 'spaceship', src: 'static/spaceship.png' },\n    { type: 'image', name: 'astroid1', src: 'static/astroid_1.png' },\n    { type: 'image', name: 'dashboard', src: 'static/dashboard.png' },\n    { type: 'image', name: 'explosionspritesheet', src: 'static/explosion.png' },\n    { type: 'sound', name: 'shoot', src: 'static/shoot.wav' },\n    { type: 'sound', name: 'explosion', src: 'static/explosion.wav' },\n    { type: 'sound', name: 'crash', src: 'static/crash.wav' },\n  ],\n  enableCollisionDetection: true,\n});\n\nlet _spaceship, _scoreboard, _exercises, _touchButtons = null;\n\nconst checkWhichButtonPressed = (e) => {\n  console.log(e);\n  if (_spaceship && _touchButtons) {\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\n    const y = e.touches ? e.touches[0].clientY : e.clientY;\n\n    const touchPoint = new objects.GameObject(new objects.Point(x / world.scale, y / world.scale), new objects.Dimensions(10, 10));\n    \n    if (utils.isCollision(_touchButtons.upButtonDimensions, touchPoint)) {\n      handleArrowKeys(utils.keyCodes.arrowup, _spaceship);\n    }\n    if (utils.isCollision(_touchButtons.downButtonDimensions, touchPoint)) {\n      handleArrowKeys(utils.keyCodes.arrowdown, _spaceship);\n    }\n    if (utils.isCollision(_touchButtons.shootButtonDimensions, touchPoint)) {\n      handleShootLaser(utils.keyCodes.space, _spaceship);\n    }\n  }\n}\n\nworld.on('touchstart', checkWhichButtonPressed);\n\nworld.on('touchend', () => {\n  if (_spaceship) {\n    _spaceship.stop()\n  }\n});\n\nworld.on('keydown', (keyCode) => {\n  if (_spaceship) {\n    handleArrowKeys(keyCode, _spaceship);\n    handleShootLaser(keyCode, _spaceship);\n  }\n});\n\nconst handleArrowKeys = (keyCode, spaceship) => {\n  const direction = keyCodeToDirectionMap[keyCode];\n  Number.isInteger(direction) && spaceship.move(direction, 8, { easeIn: true });\n};\n\nworld.on('keyup', (keyCode) => {\n  const direction = keyCodeToDirectionMap[keyCode];\n  Number.isInteger(direction) && _spaceship.stop();\n});\n\nconst handleShootLaser = (keyCode, spaceship) => {\n  if (keyCode === utils.keyCodes.space) {\n    world.insert(new Laser(new objects.Point((spaceship.point.x + (spaceship.dimensions.width)), (spaceship.point.y + (spaceship.dimensions.height / 2)))));\n    world.getResource('shoot').play();\n  }\n};\n\nworld.on('collisionDetected', ({ subject, target }) => {\n  const addExplosionTo = (point, cb) => {\n    const explosion = new objects.SpriteSheetObject(world.getResource('explosionspritesheet'), point, new objects.Dimensions(142, 200));\n    explosion.frames = 8;\n    explosion.on('afterUpdate', () => {\n      if (explosion.currentFrame >= explosion.frames) {\n        world.remove(explosion);\n        cb && cb();\n      }\n    });\n    world.insert(explosion);\n  }\n  \n  \n  if ((subject instanceof Spaceship && target instanceof Astroid) ||\n    (subject instanceof Spaceship && target instanceof Laser)) {\n      world.remove(subject);\n      world.getResource('crash').play();\n      addExplosionTo(subject.point, () => {\n        world.gameOver();\n        world.showPopup({\n          title: 'Game over!',\n          buttons: [{ text: 'Opnieuw beginnen', onClick: startTheGame }],\n        });\n      });\n  }\n  \n  if ((subject instanceof Laser && target instanceof Astroid)) {\n    if (target.answer === _exercises.answer) {\n      world.getResource('explosion').play();\n      \n      addExplosionTo(target.point);\n      \n      world.remove(target);\n      world.remove(subject);\n      world.gameObjects.filter(go => go instanceof Astroid).forEach(go => {\n        go.move(go.direction, go.fullSpeed);\n      });\n      _scoreboard.add(10);\n    } else {\n      subject.move(180, (subject.speed * 1.3));\n      target.move(180, target.fullSpeed);\n    }\n  }\n});\n\nworld.on('afterGameLoop', () => {\n  const astroids = world.gameObjects.filter(go => go instanceof Astroid);\n  if (astroids.length === 0) {\n    insertAstroids();\n  } else {\n    astroids.filter(astroid => astroid.point.x < 0 - (astroid.dimensions.width * 2)).forEach(astroid => world.remove(astroid));\n  }\n  world.gameObjects.filter(go => go instanceof Laser && (go.point.x + go.dimensions.width) > world.dimensions.width).forEach(laser => world.remove(laser));\n});\n\nconst insertAstroids = () => {\n  const y = world.dimensions.height / 3;\n  _exercises.createNew();\n  const answers = _exercises.getRandomAnswers();\n  const astroid1 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 1) / 2) - 75), answers[0]);\n  const astroid2 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 2) / 2)), answers[1]);\n  const astroid3 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 3) / 2) + 75), answers[2]);\n\n  world.insert(astroid1);\n  world.insert(astroid2);\n  world.insert(astroid3);\n}\n\nconst startTheGame = () => {\n  const spaceship = new Spaceship(world.getResource('spaceship'), new objects.Point(100, (world.dimensions.height / 2)));\n  spaceship.setBoundaries(40, world.dimensions.width, world.dimensions.height - 120, 0);\n  \n  const background = new objects.Background(world.getResource('background'), world.dimensions);\n  const scoreboard = new Scoreboard(world.getResource('dashboard'), new objects.Point(0, world.dimensions.height - 120));\n  const exercises = new Exercises();\n  _scoreboard = scoreboard;\n  _spaceship = spaceship;\n  _exercises = exercises;\n  \n  world.closePopup();\n  world.reset();\n  world.insert(background);\n  world.insert(scoreboard);\n  world.insert(exercises);\n  world.insert(spaceship);\n\n  if (isTouchDevice()) {\n    const touchButtons = new TouchButtons(world.dimensions);\n    _touchButtons = touchButtons;\n    world.insert(touchButtons);\n  }\n\n  world.start();\n};\n\nworld.showPopup({\n  title: 'Klaar om te beginnen?',\n  text: [ (isTouchDevice()) ?\n          'Gebruik de pijlen om je ruimteschip te besturen en de rode knop om op een rots te schieten' :\n          'Gebruik de pijltjes toetsen om je ruimteschip te besturen en de spatiebalk om een rots te schieten',\n          '',\n        ].join('<br /><br />'),\n  buttons: [{ text: 'Start', onClick: startTheGame }],\n});\n\n\n\n"],"sourceRoot":""}