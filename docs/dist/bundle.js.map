{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/tweedee/dist/tweedee.js","webpack:///./index.js","webpack:///./objects.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,eAAe,GAAG,IAAiD,oBAAoB,KAAK,aAAiI,CAAC,mBAAmB,mBAAmB,SAAS,cAAc,4BAA4B,YAAY,qBAAqB,2DAA2D,uCAAuC,qCAAqC,oBAAoB,EAAE,iBAAiB,4FAA4F,eAAe,wCAAwC,SAAS,EAAE,mBAAmB,8BAA8B,qDAAqD,0BAA0B,6CAA6C,sBAAsB,6DAA6D,YAAY,eAAe,SAAS,iBAAiB,iCAAiC,iBAAiB,YAAY,UAAU,sBAAsB,mBAAmB,iDAAiD,iBAAiB,kBAAkB,aAAa,OAAO,SAAS,qCAAqC,SAAS,gCAAgC,SAAS,gCAAgC,SAAS,2BAA2B,SAAS,uCAAuC,SAAS,EAAE,SAAS,uCAAuC,SAAS,iCAAiC,SAAS,8BAA8B,SAAS,EAAE,SAAS,qCAAqC,SAAS,kCAAkC,SAAS,0CAA0C,SAAS,8BAA8B,SAAS,EAAE,iBAAiB,iBAAiB,uBAAuB,oEAAoE,yBAAyB,iDAAiD,KAAK,IAAI,QAAQ,iBAAiB,qFAAqF,wBAAwB,cAAc,mBAAmB,QAAQ,QAAQ,iBAAiB,mGAAmG,iCAAiC,cAAc,mBAAmB,QAAQ,YAAY,mBAAmB,2EAA2E,qFAAqF,yHAAyH,gBAAgB,eAAe,UAAU,yFAAyF,sBAAsB,mBAAmB,4GAA4G,kBAAkB,uBAAuB,MAAM,oBAAoB,oBAAoB,qCAAqC,qCAAqC,0mBAA0mB,wGAAwG,sBAAsB,mBAAmB,mNAAmN,wBAAwB,yCAAyC,0SAA0S,+BAA+B,6CAA6C,gOAAgO,25BAA25B,QAAQ,iBAAiB,kBAAkB,mPAAmP,QAAQ,mDAAmD,QAAQ,oBAAoB,WAAW,mBAAmB,QAAQ,+FAA+F,WAAW,8KAA8K,gBAAgB,GAAG,UAAU,yBAAyB,UAAU,mDAAmD,aAAa,sCAAsC,+DAA+D,sCAAsC,wCAAwC,qCAAqC,qCAAqC,WAAW,sCAAsC,oCAAoC,mDAAmD,yCAAyC,0HAA0H,iDAAiD,aAAa,+CAA+C,gCAAgC,sBAAsB,sCAAsC,yFAAyF,sCAAsC,yDAAyD,sDAAsD,wCAAwC,yDAAyD,iDAAiD,8CAA8C,EAAE,KAAK,sDAAsD,EAAE,gDAAgD,2CAA2C,cAAc,uDAAuD,6DAA6D,sCAAsC,kFAAkF,+CAA+C,yBAAyB,6CAA6C,uBAAuB,gDAAgD,6CAA6C,8CAA8C,2CAA2C,EAAE,iBAAiB,wFAAwF,+CAA+C,2dAA2d,yBAAyB,qBAAqB,yCAAyC,uLAAuL,cAAc,4BAA4B,sDAAsD,cAAc,+BAA+B,oCAAoC,mBAAmB,EAAE,EAAE,EAAE,GAAG,iBAAiB,4BAA4B,qBAAqB,sEAAsE,uCAAuC,sGAAsG,0OAA0O,gJAAgJ,gFAAgF,iCAAiC,kCAAkC,kCAAkC,EAAE,iBAAiB,+HAA+H,kBAAkB,4JAA4J,sBAAsB,oDAAoD,yBAAyB,0RAA0R,iCAAiC,+LAA+L,sCAAsC,iBAAiB,+BAA+B,qDAAqD,6BAA6B,SAAS,gCAAgC,SAAS,6BAA6B,SAAS,2BAA2B,SAAS,EAAE,WAAW,4CAA4C,GAAG;AACz0W,mC;;;;;;;;;;;;ACDA;AAAA;AAAA;AAAA;AAAoD;AACuC;;AAE3F;AACA;AACA;;AAEA;AACA,GAAG,6CAAK;AACR,GAAG,6CAAK;AACR;;AAEA,kBAAkB,iDAAS;AAC3B;AACA,KAAK,kEAAkE;AACvE,KAAK,gEAAgE;AACrE,KAAK,+DAA+D;AACpE,KAAK,gEAAgE;AACrE,KAAK,2EAA2E;AAChF,KAAK,wDAAwD;AAC7D,KAAK,gEAAgE;AACrE,KAAK,wDAAwD;AAC7D;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B,+CAAO,gBAAgB,+CAAO,8CAA8C,+CAAO;;AAE9G,QAAQ,6CAAK;AACb,sBAAsB,6CAAK;AAC3B;AACA,QAAQ,6CAAK;AACb,sBAAsB,6CAAK;AAC3B;AACA,QAAQ,6CAAK;AACb,uBAAuB,6CAAK;AAC5B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,+DAA+D,eAAe;AAC9E;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA,kBAAkB,6CAAK;AACvB,qBAAqB,8CAAK,KAAK,+CAAO;AACtC;AACA;AACA;;AAEA,gCAAgC,kBAAkB;AAClD;AACA,0BAA0B,+CAAO,yEAAyE,+CAAO;AACjH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA,0BAA0B,kDAAS,sBAAsB,gDAAO;AAChE,wBAAwB,kDAAS,sBAAsB,8CAAK;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,kDAAkD;AACvE,SAAS;AACT,OAAO;AACP;;AAEA,0BAA0B,8CAAK,sBAAsB,gDAAO;AAC5D;AACA;;AAEA;;AAEA;AACA;AACA,mDAAmD,gDAAO;AAC1D;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,gEAAgE,gDAAO;AACvE;AACA;AACA,GAAG;AACH;AACA;AACA,+CAA+C,8CAAK;AACpD,CAAC;;AAED;AACA;AACA;AACA;AACA,uBAAuB,gDAAO,oCAAoC,+CAAO,iCAAiC,6CAAK;AAC/G,uBAAuB,gDAAO,oCAAoC,+CAAO,iCAAiC,6CAAK;AAC/G,uBAAuB,gDAAO,oCAAoC,+CAAO,iCAAiC,6CAAK;;AAE/G;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,kDAAS,qCAAqC,+CAAO;AAC7E;;AAEA,yBAAyB,+CAAO;AAChC,yBAAyB,mDAAU,qCAAqC,+CAAO;AAC/E,wBAAwB,kDAAS;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,qDAAY;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uCAAuC;AACpD,CAAC;;;;;;;;;;;;;;;;ACvLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;;AAEtD,oBAAoB,+CAAO;AAClC;AACA,qBAAqB,+CAAO,qBAAqB,kDAAU,WAAW,kDAAU;AAChF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uB;AACA;AACA;;AAEO,sBAAsB,+CAAO;AACpC;AACA,qBAAqB,+CAAO;AAC5B,MAAM,kDAAU;AAChB,MAAM,kDAAU;AAChB,MAAM,kDAAU;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;;AAEO,wBAAwB,+CAAO;AACtC;AACA,qBAAqB,+CAAO;AAC5B,MAAM,kDAAU;AAChB,MAAM,kDAAU;AAChB,MAAM,kDAAU;AAChB;AACA;AACA;;AAEO,yBAAyB,+CAAO;AACvC;AACA,iBAAiB,+CAAO;AACxB,MAAM,kDAAU;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,iC;AACA;AACA;AACA;AACA;;AAEO,2BAA2B,+CAAO;AACzC;AACA,UAAU,+CAAO;AACjB,kCAAkC,+CAAO,gBAAgB,+CAAO,8CAA8C,+CAAO;AACrH,oCAAoC,+CAAO,gBAAgB,+CAAO,6CAA6C,+CAAO;AACtH,qCAAqC,+CAAO;AAC5C,UAAU,+CAAO;AACjB,UAAU,+CAAO;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW,oBAAoB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,wBAAwB,+CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,6CAAK;AACnB,cAAc,6CAAK;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,6CAAK;AAC1B;AACA,uBAAuB,YAAY;AACnC;AACA,gBAAgB,6CAAK;AACrB;AACA,cAAc,6CAAK;AACnB;AACA;AACA;AACA;AACA,kB;AACA;;AAEA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA,mC;AACA;AACA;AACA;AACA;AACA,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","!function(t,e){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var i=e();for(var s in i)(\"object\"==typeof exports?exports:t)[s]=i[s]}}(window,function(){return function(t){var e={};function i(s){if(e[s])return e[s].exports;var n=e[s]={i:s,l:!1,exports:{}};return t[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=t,i.c=e,i.d=function(t,e,s){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:s})},i.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)i.d(s,n,function(e){return t[e]}.bind(null,n));return s},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,\"a\",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p=\"\",i(i.s=0)}([function(t,e,i){\"use strict\";i.r(e);var s={};i.r(s),i.d(s,\"Background\",function(){return u}),i.d(s,\"Dimensions\",function(){return d}),i.d(s,\"GameObject\",function(){return l}),i.d(s,\"Point\",function(){return a}),i.d(s,\"SpriteSheetObject\",function(){return m});var n={};i.r(n),i.d(n,\"getRandomInt\",function(){return p}),i.d(n,\"isCollision\",function(){return f}),i.d(n,\"keyCodes\",function(){return g});var o={};i.r(o),i.d(o,\"collisions\",function(){return E}),i.d(o,\"eventEmitter\",function(){return r}),i.d(o,\"createImageBehaviour\",function(){return k}),i.d(o,\"movement\",function(){return j});var r=function(){this.listeners={},this.on=function(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)},this.emit=function(t,e){this.listeners[t]&&this.listeners[t].forEach(t=>{t(e)})}};class h{constructor(t,e){if(void 0===t||void 0===e)throw new Error(\"x of y should be set for a Point object\");this.x=t||0,this.y=e||0}static none(){return new h(0,0)}}var a=h;class c{constructor(t,e){if(void 0===t||void 0===e)throw new Error(\"Width of Height should be set for a Dimensions object\");this.width=t||0,this.height=e||0}static none(){return new c(0,0)}}var d=c;var l=class{constructor(t,e,i){if(!t instanceof a)throw new Error(\"point should be an instance of Point\");if(!e instanceof d)throw new Error(\"dimensions should be an instance of Dimensions\");this.point=t||a.none(),this.dimensions=e||d.none(),this.updaters=[],r.bind(this)(),i&&i.forEach(t=>this.addBehaviour(t))}addBehaviour(t){t.bind(this)()}update(t){this.emit(\"beforeUpdate\"),this.updaters.forEach(e=>e(t,this)),this.emit(\"afterUpdate\")}};var u=class extends l{constructor(t,e,i){super(a.none(),e),this.image=t,i&&(this.scrollOptions=i),this.updaters.push(this.drawBackground.bind(this))}drawBackground(t){if(this.scrollOptions){const{speed:e,direction:i}=this.scrollOptions;this.scrollValue=this.scrollValue||0;const s=t.scaler(t.dimensions.width);this.scrollValue>=s&&(this.scrollValue=0),90===i?(this.scrollValue=this.scrollValue+=e,t.ctx.drawImage(this.image,Math.round(this.scrollValue-s),0,t.scaler(this.dimensionswidth),t.scaler(this.dimensions.height)),t.ctx.drawImage(this.image,Math.round(this.scrollValue),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))):270===i&&(this.scrollValue-=e,t.ctx.drawImage(this.image,Math.round(this.scrollValue+s),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),t.ctx.drawImage(this.image,Math.round(this.scrollValue),0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)))}else t.ctx.drawImage(this.image,0,0,t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))}};var m=class extends l{constructor(t,e,i){super(e,i),this.image=t,this.sWidth=i.width,this.sHeight=i.height,this.repeat=!1,this.frames=Math.round(t.width/i.width),this.speed=0,this.currentFrame=0,this.updaters.push(this.drawSpritesheetImage.bind(this))}drawSpritesheetImage(t){if(this.currentFrame>=this.frames)return;this.currentFrame>=this.frames&&this.repeat&&(this.currentFrame=0),t.ctx.drawImage(this.image,this.currentFrame*this.dimensions.width,0,this.sWidth,this.sHeight,t.scaler(this.point.x),t.scaler(this.point.y),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),this.speed=this.speed+.1;const e=Math.round(this.speed);this.currentFrame+=e,1===e&&(this.speed=0)}};const p=(t,e)=>Math.floor(Math.random()*(e-t+1))+t,f=(t,e)=>t.point.x<e.point.x+e.dimensions.width&&t.point.x+t.dimensions.width>e.point.x&&t.point.y<e.point.y+e.dimensions.height&&t.point.y+t.dimensions.height>e.point.y,g={backspace:8,tab:9,enter:13,shiftleft:16,shiftright:16,ctrlleft:17,ctrlrigght:17,altleft:18,altright:18,pause:19,capslock:20,escape:27,space:32,pageup:33,pagedown:34,end:35,home:36,arrowleft:37,arrowup:38,arrowright:39,arrowdown:40,insert:45,delete:46,0:48,1:49,2:50,3:51,4:52,5:53,6:54,7:55,8:56,9:57,a:65,b:66,c:67,d:68,e:69,f:70,g:71,h:72,i:73,j:74,k:75,l:76,m:77,n:78,o:79,p:80,q:81,r:82,s:83,t:84,u:85,v:86,w:87,x:88,y:89,z:90,metaleft:91,metaright:92,select:93,numpad0:96,numpad1:97,numpad2:98,numpad3:99,numpad4:100,numpad5:101,numpad6:102,numpad7:103,numpad8:104,numpad9:105,numpadmultiply:106,numpadadd:107,numpadsubtract:109,numpaddecimal:110,numpaddivide:111,f1:112,f2:113,f3:114,f4:115,f5:116,f6:117,f7:118,f8:119,f9:120,f10:121,f11:122,f12:123,numlock:144,scrolllock:145,semicolon:186,equalsign:187,comma:188,minus:189,period:190,slash:191,backquote:192,bracketleft:219,backslash:220,braketright:221,quote:222};class w{constructor(t,e){this.options=e||{},this.gameObjects=[],this.isGameOver=!1,this.started=!1,this.container=document.querySelector(t),b.bind(this)(this.container,this.options),r.bind(this)(),y.bind(this)(this.container,e),v.bind(this)(),e.enableCollisionDetection&&x.bind(this)()}start(){this.started=!0,this.isGameOver=!1,this.gameLoop()}reset(){this.gameObjects=[]}gameOver(){this.isGameOver=!0}clear(){this.ctx.clearRect(0,0,this.scaler(this.dimensions.width),this.scaler(this.dimensions.height))}gameLoop(){this.isGameOver||(this.emit(\"beforeGameLoop\",this),this.clear(),this.gameObjects.forEach(t=>t.update(this)),this.emit(\"afterGameLoop\",this),window.requestAnimationFrame(()=>{this.gameLoop()}))}insert(t){this.gameObjects.push(t)}remove(t){this.gameObjects=this.gameObjects.filter(e=>e!==t)}showPopup(t){const e=document.createElement(\"div\");e.className=\"modal\",e.style.width=this.scaler(this.width)+\"px\";const i=document.createElement(\"div\");if(i.className=\"modal-content\",t.title){const e=document.createElement(\"h1\");e.innerHTML=t.title,i.appendChild(e)}if(t.text){const e=document.createElement(\"div\");e.innerHTML=t.text,i.appendChild(e)}t.buttons&&t.buttons.length&&t.buttons.forEach(t=>{const e=document.createElement(\"button\");e.innerHTML=t.text,e.style.padding=\"16px\",e.style.fontWeight=\"700\",e.addEventListener(\"click\",t.onClick),i.appendChild(e)}),e.appendChild(i),this.container.appendChild(e)}closePopup(){const t=this.container.querySelector(\".modal\");t&&t.parentNode.removeChild(t)}}const b=function(t,e){const i=document.createElement(\"div\");i.style.display=\"none\",e.resources&&(e.resources.filter(t=>\"image\"===t.type).forEach(t=>{const e=document.createElement(\"img\");e.src=t.src,e.id=t.src,e.dataset.name=t.name,i.append(e)}),e.resources.filter(t=>\"sound\"===t.type).forEach(t=>{const e=document.createElement(\"audio\");e.src=t.src,e.id=t.src,e.dataset.name=t.name,i.append(e)})),t.appendChild(i),this.getResource=function(t){const e=document.querySelector(`[data-name='${t}']`);if(!e)throw new Error(`Couldn't find resource for: '${t}', please register this as an image resource!`);return\"AUDIO\"===e.tagName?e.cloneNode():e}},v=function(){this.keysDown=[],window.addEventListener(\"keydown\",t=>{this.keysDown.push(t.keyCode),this.emit(\"keydown\",t.keyCode)}),window.addEventListener(\"keyup\",t=>{this.keydowns=this.keysDown.filter(e=>e!==t.keyCode),this.emit(\"keyup\",t.keyCode)}),this.canvas.addEventListener(\"mousedown\",t=>{this.emit(\"mousedown\",t)}),this.canvas.addEventListener(\"mouseup\",t=>{this.emit(\"mouseup\",t)}),this.canvas.addEventListener(\"touchstart\",t=>{t.preventDefault(),this.emit(\"touchstart\",t)}),this.canvas.addEventListener(\"touchend\",t=>{t.preventDefault(),this.emit(\"touchend\",t)})},y=function(t,e){this.dimensions=new d(e.width||1024,e.height||768),this.calculateDimensions=function(e){const i=window.innerHeight,s=window.innerWidth;s>i?(this.scale=i/this.dimensions.height,t.style.width=this.scaler(this.dimensions.width)+\"px\",t.style.height=this.scaler(this.dimensions.height)+\"px\",e.width=this.scaler(this.dimensions.width),e.height=this.scaler(this.dimensions.height)):(this.scale=s/this.dimensions.width,t.style.width=this.scaler(this.dimensions.width)+\"px\",t.style.height=this.scaler(this.dimensions.height)+\"px\",e.width=this.scaler(this.dimensions.width),e.height=this.scaler(this.dimensions.height))},this.scaler=function(t){return t*this.scale};const i=document.createElement(\"canvas\");i.className=\"world\",t.appendChild(i),this.calculateDimensions(i),this.ctx=i.getContext(\"2d\"),window.addEventListener(\"resize\",()=>this.calculateDimensions(i)),i.focus(),this.canvas=i},x=function(){this.on(\"afterGameLoop\",t=>{const e=t.gameObjects.filter(t=>t.collisionDetection);e.forEach(i=>{e.filter(t=>t!==i).forEach(e=>{f(i,e)&&t.emit(\"collisionDetected\",{subject:i,target:e})})})})};var E=function(){this.collisionDetection=!0};var k=t=>(function(){this.image=t,this.scaleV=1,this.scaleH=1,this.updateImage=function(t){if(-1===this.scaleV||-1===this.scaleH){const e=-1===this.scaleV?-1*this.point.x:this.point.x,i=-1===this.scaleH?-1*this.point.y:this.point.y;t.ctx.save(),t.ctx.translate(t.scaler(this.dimensions.width),0),t.ctx.scale(this.scaleV,this.scaleH),t.ctx.drawImage(this.image,t.scaler(e),t.scaler(i),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height)),t.ctx.restore()}else t.ctx.drawImage(this.image,t.scaler(this.point.x),t.scaler(this.point.y),t.scaler(this.dimensions.width),t.scaler(this.dimensions.height))},this.updaters.push(this.updateImage.bind(this)),this.flipVertically=function(){this.scaleV=1===this.scaleV?-1:1},this.flipHorizontally=function(){this.scaleH=1===this.scaleH?-1:1}});var j=function(){this.direction=null,this.speed=0,this.easeInValue=0,this.deltaX=0,this.deltaY=0,this.boundaries=null,this.move=function(t,e,i){this.options=i||{},this.direction=t,null!=e&&(this.speed=this.options.easeIn?this.easeInValue:e,this.deltaX=e*Math.cos(t*Math.PI/180),this.deltaY=-e*Math.sin(t*Math.PI/180))},this.stop=function(){this.direction=null,this.speed=0,this.easeInValue=0},this.checkBoundary=(t=>{this.boundaries&&(90===this.direction&&this.point.y-t<=this.boundaries.top&&(this.point.y=this.boundaries.top,this.stop()),270===this.direction&&this.point.y+t+this.dimensions.height>=this.boundaries.bottom&&(this.point.y=this.boundaries.bottom-this.dimensions.height,this.stop()))}),this.updateMovement=function(){Number.isInteger(this.direction)&&(this.options.easeIn&&this.easeInValue<this.speed&&(this.easeInValue+=1),this.checkBoundary(this.speed),this.point.x+=this.deltaX,this.point.y+=this.deltaY)},this.setBoundaries=function(t,e,i,s){this.boundaries={top:t,right:e,bottom:i,left:s}},this.updaters.push(this.updateMovement.bind(this))};i.d(e,\"GameWorld\",function(){return w}),i.d(e,\"behaviours\",function(){return o}),i.d(e,\"objects\",function(){return s}),i.d(e,\"utils\",function(){return n});e.default={GameWorld:w,behaviours:o,objects:s,utils:n}}])});\n//# sourceMappingURL=tweedee.js.map","import { GameWorld, utils, objects } from 'tweedee';\nimport { Spaceship, Laser, Scoreboard, Astroid, Exercises, TouchButtons } from './objects';\n\nconst isTouchDevice = () => {\n  return ('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch;\n};\n\nconst keyCodeToDirectionMap = {\n  [utils.keyCodes.arrowup]: 90,\n  [utils.keyCodes.arrowdown]: 270,\n};\n\nconst world = new GameWorld('#container', {\n  resources: [\n    { type: 'image', name: 'background', src: 'static/background.png' },\n    { type: 'image', name: 'spaceship', src: 'static/spaceship.png' },\n    { type: 'image', name: 'astroid1', src: 'static/astroid_1.png' },\n    { type: 'image', name: 'dashboard', src: 'static/dashboard.png' },\n    { type: 'image', name: 'explosionspritesheet', src: 'static/explosion.png' },\n    { type: 'sound', name: 'shoot', src: 'static/shoot.wav' },\n    { type: 'sound', name: 'explosion', src: 'static/explosion.wav' },\n    { type: 'sound', name: 'crash', src: 'static/crash.wav' },\n  ],\n  enableCollisionDetection: true,\n});\n\nlet _spaceship, _scoreboard, _exercises, _touchButtons = null;\n\nconst checkWhichButtonPressed = (e) => {\n  if (_spaceship && _touchButtons) {\n    const x = e.touches ? e.touches[0].clientX : e.clientX;\n    const y = e.touches ? e.touches[0].clientY : e.clientY;\n\n    const touchPoint = new objects.GameObject(new objects.Point(x / world.scale, y / world.scale), new objects.Dimensions(10, 10));\n    \n    if (utils.isCollision(_touchButtons.upButtonDimensions, touchPoint)) {\n      handleArrowKeys(utils.keyCodes.arrowup, _spaceship);\n    }\n    if (utils.isCollision(_touchButtons.downButtonDimensions, touchPoint)) {\n      handleArrowKeys(utils.keyCodes.arrowdown, _spaceship);\n    }\n    if (utils.isCollision(_touchButtons.shootButtonDimensions, touchPoint)) {\n      handleShootLaser(utils.keyCodes.space, _spaceship);\n    }\n  }\n}\n\nworld.on('touchstart', checkWhichButtonPressed);\n\nworld.on('touchend', () => {\n  if (_spaceship) {\n    _spaceship.stop()\n  }\n});\n\nworld.on('keydown', (keyCode) => {\n  if (_spaceship) {\n    handleArrowKeys(keyCode, _spaceship);\n    handleShootLaser(keyCode, _spaceship);\n  }\n});\n\nconst handleArrowKeys = (keyCode, spaceship) => {\n  const direction = keyCodeToDirectionMap[keyCode];\n  Number.isInteger(direction) && spaceship.move(direction, 8, { easeIn: true });\n};\n\nworld.on('keyup', (keyCode) => {\n  const direction = keyCodeToDirectionMap[keyCode];\n  Number.isInteger(direction) && _spaceship.stop();\n});\n\nconst handleShootLaser = (keyCode, spaceship) => {\n  if (keyCode === utils.keyCodes.space) {\n    world.insert(new Laser(new objects.Point((spaceship.point.x + (spaceship.dimensions.width)), (spaceship.point.y + (spaceship.dimensions.height / 2)))));\n    world.getResource('shoot').play();\n  }\n};\n\nworld.on('collisionDetected', ({ subject, target }) => {\n  const addExplosionTo = (point, cb) => {\n    const explosion = new objects.SpriteSheetObject(world.getResource('explosionspritesheet'), point, new objects.Dimensions(142, 200));\n    explosion.frames = 8;\n    explosion.on('afterUpdate', () => {\n      if (explosion.currentFrame >= explosion.frames) {\n        world.remove(explosion);\n        cb && cb();\n      }\n    });\n    world.insert(explosion);\n  }\n  \n  \n  if ((subject instanceof Spaceship && target instanceof Astroid) ||\n    (subject instanceof Spaceship && target instanceof Laser)) {\n      world.remove(subject);\n      world.getResource('crash').play();\n      addExplosionTo(subject.point, () => {\n        world.gameOver();\n        world.showPopup({\n          title: 'Game over!',\n          buttons: [{ text: 'Opnieuw beginnen', onClick: startTheGame }],\n        });\n      });\n  }\n  \n  if ((subject instanceof Laser && target instanceof Astroid)) {\n    if (target.answer === _exercises.answer) {\n      world.getResource('explosion').play();\n      \n      addExplosionTo(target.point);\n      \n      world.remove(target);\n      world.remove(subject);\n      world.gameObjects.filter(go => go instanceof Astroid).forEach(go => {\n        go.move(go.direction, go.fullSpeed);\n      });\n      _scoreboard.add(10);\n    } else {\n      subject.move(180, (subject.speed * 1.3));\n      target.move(180, target.fullSpeed);\n    }\n  }\n});\n\nworld.on('afterGameLoop', () => {\n  const astroids = world.gameObjects.filter(go => go instanceof Astroid);\n  if (astroids.length === 0) {\n    insertAstroids();\n  } else {\n    astroids.filter(astroid => astroid.point.x < 0 - (astroid.dimensions.width * 2)).forEach(astroid => world.remove(astroid));\n  }\n  world.gameObjects.filter(go => go instanceof Laser && (go.point.x + go.dimensions.width) > world.dimensions.width).forEach(laser => world.remove(laser));\n});\n\nconst insertAstroids = () => {\n  const y = world.dimensions.height / 3;\n  _exercises.createNew();\n  const answers = _exercises.getRandomAnswers();\n  const astroid1 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 1) / 2) - 75), answers[0]);\n  const astroid2 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 2) / 2)), answers[1]);\n  const astroid3 = new Astroid(world.getResource('astroid1'), new objects.Point((world.dimensions.width - utils.getRandomInt(130, 170)), ((y * 3) / 2) + 75), answers[2]);\n\n  world.insert(astroid1);\n  world.insert(astroid2);\n  world.insert(astroid3);\n}\n\nconst startTheGame = () => {\n  const spaceship = new Spaceship(world.getResource('spaceship'), new objects.Point(100, (world.dimensions.height / 2)));\n  spaceship.setBoundaries(40, world.dimensions.width, world.dimensions.height - 120, 0);\n  \n  const background = new objects.Background(world.getResource('background'), world.dimensions);\n  const scoreboard = new Scoreboard(world.getResource('dashboard'), new objects.Point(0, world.dimensions.height - 120));\n  const exercises = new Exercises();\n  _scoreboard = scoreboard;\n  _spaceship = spaceship;\n  _exercises = exercises;\n  \n  world.closePopup();\n  world.reset();\n  world.insert(background);\n  world.insert(scoreboard);\n  world.insert(exercises);\n  world.insert(spaceship);\n\n  if (isTouchDevice()) {\n    const touchButtons = new TouchButtons(world.dimensions);\n    _touchButtons = touchButtons;\n    world.insert(touchButtons);\n  }\n\n  world.start();\n};\n\nworld.showPopup({\n  title: 'Klaar om te beginnen?',\n  text: [ (isTouchDevice()) ?\n          'Gebruik de pijlen om je ruimteschip te besturen en de rode knop om op een rots te schieten' :\n          'Gebruik de pijltjes toetsen om je ruimteschip te besturen en de spatiebalk om een rots te schieten',\n          '',\n        ].join('<br /><br />'),\n  buttons: [{ text: 'Start', onClick: startTheGame }],\n});\n\n\n\n","import { objects, mixins, utils, behaviours } from 'tweedee';\n\nexport class Laser extends objects.GameObject {\n  constructor(point) {\n    super(point, new objects.Dimensions(20, 5), [behaviours.movement, behaviours.collisions]);\n    this.updaters.push(this.drawLaser.bind(this));\n    this.move(0, 15);\n  }\n\n  drawLaser(world) {\n    world.ctx.beginPath();\n    world.ctx.moveTo(world.scaler(this.point.x), world.scaler(this.point.y));\n    world.ctx.lineTo(world.scaler(this.point.x) + this.dimensions.width, world.scaler(this.point.y));\n    world.ctx.strokeStyle = \"#FF0000\";\n    world.ctx.lineWidth = this.dimensions.height;\n    world.ctx.stroke(); \n  }\n}\n\nexport class Astroid extends objects.GameObject {\n  constructor(image, point, answer) {\n    super(point, new objects.Dimensions(image.width, image.height), [\n      behaviours.createImageBehaviour(image),\n      behaviours.movement,\n      behaviours.collisions\n    ]);\n    this.answer = answer;\n    this.updaters.push(this.drawAnswer.bind(this));\n    this.fullSpeed = 5;\n    this.move(180, 2);\n  }\n\n  drawAnswer(world) {\n    world.ctx.font = `${world.scaler(40)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.fillText(this.answer, world.scaler(this.point.x + 50), world.scaler(this.point.y + 85));\n  }\n}\n\nexport class Spaceship extends objects.GameObject {\n  constructor(image, point) {\n    super(point, new objects.Dimensions(image.width, image.height), [\n      behaviours.createImageBehaviour(image),\n      behaviours.movement,\n      behaviours.collisions\n    ]);\n  }\n}\n\nexport class Scoreboard extends objects.GameObject {\n  constructor(image, point) {\n    super(point, objects.Dimensions.none(), [\n      behaviours.createImageBehaviour(image),\n    ]);\n    this.updaters.push(this.drawScoreboard.bind(this));\n    this.score = 0;\n  }\n\n  add (score) {\n    this.score += score;\n  }\n\n  drawScoreboard (world) {\n    world.ctx.save();\n    world.ctx.font = `${world.scaler(30)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.textAlign = \"left\"; \n    world.ctx.fillText('Score:  ' + this.score, world.scaler(20), world.scaler(30));\n    world.ctx.restore();\n  }\n}\n\nexport class TouchButtons extends objects.GameObject {\n  constructor(worldDimensions) {\n    super(objects.Point.none());\n    this.upButtonDimensions = new objects.GameObject(new objects.Point(20, worldDimensions.height - 160), new objects.Dimensions(80, 50));\n    this.downButtonDimensions = new objects.GameObject(new objects.Point(20, worldDimensions.height - 80), new objects.Dimensions(80, 50));\n    this.shootButtonDimensions = new objects.GameObject(\n      new objects.Point(worldDimensions.width - 120, worldDimensions.height - 140),\n      new objects.Dimensions(70, 70),\n    );\n    this.updaters.push(this.updateTouchButtons.bind(this));\n  }\n\n  updateUpButton(world) {\n    world.ctx.fillStyle = 'grey';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.upButtonDimensions;\n    world.ctx.moveTo(world.scaler(point.x + dimensions.width / 2), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width / 2), world.scaler(point.y));\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateDownButton(world) {\n    world.ctx.fillStyle = 'grey';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.downButtonDimensions;\n    world.ctx.moveTo(world.scaler(point.x), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + dimensions.width), world.scaler(point.y));\n    world.ctx.lineTo(world.scaler(point.x + (dimensions.width / 2)), world.scaler(point.y + dimensions.height));\n    world.ctx.lineTo(world.scaler(point.x), world.scaler(point.y));\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateShootButton(world) {\n    world.ctx.fillStyle = '#991a00';\n    world.ctx.strokeStyle = \"black\";\n    world.ctx.lineWidth = 3;\n    world.ctx.beginPath();\n\n    const { point, dimensions } = this.shootButtonDimensions;\n    world.ctx.arc(\n      world.scaler(point.x + (dimensions.width / 2)),\n      world.scaler(point.y + (dimensions.height / 2)),\n      world.scaler(dimensions.width / 2), 0, Math.PI * 2, true\n    );\n    world.ctx.stroke();\n    world.ctx.fill();\n  }\n\n  updateTouchButtons(world) {\n    world.ctx.save();\n    this.updateUpButton(world);\n    this.updateDownButton(world);\n    this.updateShootButton(world);\n    world.ctx.restore();\n  }\n}\n\nexport class Exercises extends objects.GameObject {\n  constructor(point) {\n    super (point);\n    this.updaters.push(this.updateExercise.bind(this));\n    this.text = \"\";\n    this.answer = null;\n  }\n\n  createNew () {\n    const a = utils.getRandomInt(1, 10);\n    const b = utils.getRandomInt(1, 10);\n    this.a = a;\n    this.b = b;\n    this.text = a + ' x ' + b;\n    this.answer = a * b;\n  }\n\n  getRandomAnswers () {\n    const result = new Array(3);\n    const position = utils.getRandomInt(0, 2);\n    result[position] = this.answer;\n    for (let index = 0; index <= 2; index++) {\n      if (index !== position) {\n        let b = utils.getRandomInt(1, 10);\n        while (b === this.b) {\n          b = utils.getRandomInt(1, 10);\n        }\n        result[index] = this.a * b;\n      }\n    }\n    return result;    \n  }\n\n  updateExercise(world) {\n    world.ctx.save();\n    world.ctx.font = `${world.scaler(60)}px Arial`;\n    world.ctx.fillStyle = 'white';\n    world.ctx.textAlign = \"center\"; \n    world.ctx.fillText('Som:', world.scaler(280), world.scaler(world.dimensions.height - 40));\n    world.ctx.fillText(this.text, world.scaler(510), world.scaler(world.dimensions.height - 40));\n    world.ctx.restore();\n  }\n}"],"sourceRoot":""}